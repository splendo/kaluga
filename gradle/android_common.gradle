/*
 Copyright 2020 Splendo Consulting B.V. The Netherlands

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

 */

repositories {
    mavenCentral()
}

android {

    compileSdkVersion gradle.android_compile_sdk_version
    buildToolsVersion gradle.android_build_tools_version

    defaultConfig {
        minSdkVersion gradle.android_min_sdk_version
        targetSdkVersion gradle.android_target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    if (!gradle.ext.component_type.toLowerCase().contains("app")) {
        logger.lifecycle("Android sourcesets for this project module are configured as a library")
        sourceSets {
            main {
                manifest.srcFile 'src/androidLibMain/AndroidManifest.xml'
                res.srcDirs += ['src/androidLibMain/res']
                res.srcDirs += ['src/commonTest/resources']
                if (gradle.component_type.contains("compose")) {
                    java.srcDir 'src/androidLibMain/kotlin'
                }
            }
            androidTest {
                manifest.srcFile 'src/androidLibAndroidTest/AndroidManifest.xml'
                java.srcDir 'src/androidLibAndroidTest/kotlin'
                res.srcDirs += ['src/androidLibAndroidTest/res']
                res.srcDirs += ['src/commonTest/resources']
            }


            test {
                java.srcDir 'src/androidLibUnitTest/kotlin'
                res.srcDirs += ['src/androidLibMain/res']
                res.srcDirs += ['src/commonTest/resources']
            }

        }
    } else {
        logger.lifecycle("Android sourcesets for this project module are configured using defaults (for an app)")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ['-XXLanguage:+InlineClasses', '-Xjvm-default=all']
    }

    if (gradle.component_type.contains("compose")) {
        logger.lifecycle("This project module is a Compose only module")
        buildFeatures {
            compose = true
        }
        composeOptions {
            kotlinCompilerExtensionVersion = "$gradle.androidx_compose_compiler_version"
        }
    }

}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$gradle.kotlinx_coroutines_version"
    implementation("androidx.appcompat:appcompat:$gradle.androidx_appcompat_version") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:$gradle.mockito_version"
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    androidTestImplementation "org.mockito:mockito-android:$gradle.mockito_version"
    androidTestImplementation "net.bytebuddy:byte-buddy-android:$gradle.bytebuddy_version!!"
    androidTestImplementation "net.bytebuddy:byte-buddy-agent:$gradle.bytebuddy_version!!"

    androidTestImplementation "androidx.test:core:$gradle.androidx_test_version"
    androidTestImplementation "androidx.test:core-ktx:$gradle.androidx_test_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "androidx.test:rules:$gradle.androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$gradle.androidx_test_junit_version"
    androidTestImplementation "androidx.test:runner:$gradle.androidx_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$gradle.androidx_test_espresso_version"
    androidTestImplementation 'org.jetbrains.kotlin:kotlin-test'
    androidTestImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}
