public abstract interface class com/splendo/kaluga/scientific/ByteScientificArray : com/splendo/kaluga/scientific/ScientificArray {
	public fun get (I)Ljava/lang/Byte;
	public synthetic fun get (I)Ljava/lang/Number;
	public fun getSize ()I
	public abstract fun getValues ()[B
	public fun iterator ()Ljava/util/Iterator;
}

public final class com/splendo/kaluga/scientific/ByteScientificArray$DefaultImpls {
	public static fun get (Lcom/splendo/kaluga/scientific/ByteScientificArray;I)Ljava/lang/Byte;
	public static fun getDecimalValues (Lcom/splendo/kaluga/scientific/ByteScientificArray;)Ljava/util/List;
	public static fun getSize (Lcom/splendo/kaluga/scientific/ByteScientificArray;)I
	public static fun iterator (Lcom/splendo/kaluga/scientific/ByteScientificArray;)Ljava/util/Iterator;
}

public final class com/splendo/kaluga/scientific/ConvertScientificValueKt {
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convert (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convert$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convert$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convert$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convert$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedImperialValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedImperialValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedImperialValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedImperialValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricAndImperialValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedMetricAndImperialValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricAndImperialValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricAndImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricAndImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedMetricAndImperialValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricAndUKImperialValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedMetricAndUKImperialValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricAndUKImperialValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricAndUKImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricAndUKImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedMetricAndUKImperialValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricAndUSCustomaryValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedMetricAndUSCustomaryValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricAndUSCustomaryValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricAndUSCustomaryValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricAndUSCustomaryValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedMetricAndUSCustomaryValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedMetricValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedMetricValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedMetricValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedMetricValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedUKImperialValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedUKImperialValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedUKImperialValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedUKImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedUKImperialValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedUKImperialValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedUSCustomaryValueToDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun convertDefinedUSCustomaryValueToDefaultUndefined$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedUSCustomaryValueToDefaultUndefinedValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun convertDefinedUSCustomaryValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertDefinedUSCustomaryValueToExtended (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static synthetic fun convertDefinedUSCustomaryValueToExtended$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/UndefinedExtendedUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun convertImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertImperialExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertImperialExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricAndImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricAndImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertMetricAndImperialExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricAndImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricAndImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertMetricAndImperialExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricAndUKImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricAndUKImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertMetricAndUKImperialExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricAndUKImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricAndUKImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertMetricAndUKImperialExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricAndUSCustomaryExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricAndUSCustomaryExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertMetricAndUSCustomaryExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricAndUSCustomaryExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricAndUSCustomaryExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertMetricAndUSCustomaryExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertMetricExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertMetricExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertMetricExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertMetricExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertUKImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertUKImperialExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertUKImperialExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertUKImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertUKImperialExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertUKImperialExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertUSCustomaryExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertUSCustomaryExtendedValueToDefaultScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun convertUSCustomaryExtendedValueToDefaultScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun convertUSCustomaryExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertUSCustomaryExtendedValueToScientificValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static synthetic fun convertUSCustomaryExtendedValueToScientificValue$default (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun convertValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static synthetic fun convertValue$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/CreateScientificValueKt {
	public static final fun invoke (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun invoke (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun invoke (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun invoke (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun invoke (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun invoke (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun invoke (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
}

public final class com/splendo/kaluga/scientific/DefaultScientificArray : com/splendo/kaluga/scientific/DoubleScientificArray {
	public static final field Companion Lcom/splendo/kaluga/scientific/DefaultScientificArray$Companion;
	public fun <init> (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)V
	public fun <init> ([DLcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)V
	public final fun component1 ()[D
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;
	public final fun copy ([DLcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/DefaultScientificArray;[DLcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public fun equals (Ljava/lang/Object;)Z
	public fun getUnit ()Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;
	public synthetic fun getUnit ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public fun getValues ()[D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/DefaultScientificArray$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public fun <init> (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/DefaultScientificArray;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/DefaultScientificArray$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/DefaultScientificValue : com/splendo/kaluga/scientific/ScientificValue {
	public static final field Companion Lcom/splendo/kaluga/scientific/DefaultScientificValue$Companion;
	public fun <init> (DLcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)V
	public fun <init> (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)V
	public final fun component1 ()D
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;
	public final fun copy (DLcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/DefaultScientificValue;DLcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getUnit ()Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;
	public synthetic fun getUnit ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public fun getValue ()Ljava/lang/Double;
	public synthetic fun getValue ()Ljava/lang/Number;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/DefaultScientificValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public fun <init> (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/DefaultScientificValue;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/DefaultScientificValue$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/DefaultUndefinedScientificValue : com/splendo/kaluga/scientific/UndefinedScientificValue {
	public fun <init> (DLcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)V
	public fun <init> (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)V
	public fun compareTo (Lcom/splendo/kaluga/scientific/ScientificValue;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()D
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (DLcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;DLcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDecimalValue ()Lcom/splendo/kaluga/base/utils/Decimal;
	public synthetic fun getUnit ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public fun getUnit ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getValue ()Ljava/lang/Double;
	public synthetic fun getValue ()Ljava/lang/Number;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/scientific/DoubleScientificArray : com/splendo/kaluga/scientific/ScientificArray {
	public fun get (I)Ljava/lang/Double;
	public synthetic fun get (I)Ljava/lang/Number;
	public fun getSize ()I
	public abstract fun getValues ()[D
	public fun iterator ()Ljava/util/Iterator;
}

public abstract interface class com/splendo/kaluga/scientific/FloatScientificArray : com/splendo/kaluga/scientific/ScientificArray {
	public fun get (I)Ljava/lang/Float;
	public synthetic fun get (I)Ljava/lang/Number;
	public fun getSize ()I
	public abstract fun getValues ()[F
	public fun iterator ()Ljava/util/Iterator;
}

public abstract interface class com/splendo/kaluga/scientific/IntScientificArray : com/splendo/kaluga/scientific/ScientificArray {
	public fun get (I)Ljava/lang/Integer;
	public synthetic fun get (I)Ljava/lang/Number;
	public fun getSize ()I
	public abstract fun getValues ()[I
	public fun iterator ()Ljava/util/Iterator;
}

public abstract interface class com/splendo/kaluga/scientific/LongScientificArray : com/splendo/kaluga/scientific/ScientificArray {
	public fun get (I)Ljava/lang/Long;
	public synthetic fun get (I)Ljava/lang/Number;
	public fun getSize ()I
	public abstract fun getValues ()[J
	public fun iterator ()Ljava/util/Iterator;
}

public abstract class com/splendo/kaluga/scientific/PhysicalQuantity : java/io/Serializable {
	public static final field Companion Lcom/splendo/kaluga/scientific/PhysicalQuantity$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/PhysicalQuantity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Acceleration : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Action : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Action;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Angle : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$AngularAcceleration : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$AngularAcceleration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$AngularVelocity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$AngularVelocity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Area : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$AreaDensity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$AreaDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension : com/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension {
	public static final field Companion Lcom/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public final fun getUndefined ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Density : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Density;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Dimensionless : com/splendo/kaluga/scientific/PhysicalQuantity {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Dimensionless;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$DynamicViscosity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$DynamicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Energy : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Force : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Frequency : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$HeatCapacity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$HeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Illuminance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Jolt : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Jolt;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$KinematicViscosity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$KinematicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Length : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$LinearMassDensity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$LinearMassDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Luminance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$LuminousEnergy : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$LuminousExposure : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousExposure;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$MassFlowRate : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$MassFlowRate;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Molality : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Molality;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$MolarEnergy : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$MolarEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$MolarMass : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$MolarMass;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$MolarVolume : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$MolarVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Molarity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Molarity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Momentum : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Momentum;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension : com/splendo/kaluga/scientific/PhysicalQuantity {
	public static final field Companion Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Power : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Pressure : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$SpecificEnergy : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$SpecificHeatCapacity : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$SpecificVolume : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Speed : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Speed;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$SurfaceTension : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$SurfaceTension;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Temperature : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Temperature;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$ThermalResistance : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$ThermalResistance;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Time : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Undefined : com/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension {
	public static final field Companion Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/UndefinedQuantityType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun copy (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustomQuantity ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Undefined$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Undefined$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Voltage : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Volume : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlow : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlow;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlux : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlux;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Weight : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/PhysicalQuantity$Yank : com/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/PhysicalQuantity$Yank;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/scientific/ScientificArray : java/io/Serializable {
	public abstract fun get (I)Ljava/lang/Number;
	public fun getDecimalValues ()Ljava/util/List;
	public abstract fun getSize ()I
	public abstract fun getUnit ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public abstract fun iterator ()Ljava/util/Iterator;
}

public final class com/splendo/kaluga/scientific/ScientificArrayKt {
	public static final fun combine (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun combine (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun concat (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun concat (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun concat (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun concat (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun convert (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun convertValues (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Ljava/util/List;
	public static final fun map (Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun map (Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun map (Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificArray;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificArray;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun scientificArrayFromListOfDecimal (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun scientificArrayFromListOfDecimalDefault (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun scientificArrayFromListOfNumber (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
	public static final fun scientificArrayFromListOfNumberDefault (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun split (Lcom/splendo/kaluga/scientific/ScientificArray;)Ljava/util/List;
	public static final fun split (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Ljava/util/List;
	public static final fun split (Lcom/splendo/kaluga/scientific/ScientificArray;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun split (Lcom/splendo/kaluga/scientific/ScientificArray;Lkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun toScientificArray (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;)Lcom/splendo/kaluga/scientific/DefaultScientificArray;
	public static final fun toScientificArray (Ljava/util/List;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificArray;
}

public abstract interface class com/splendo/kaluga/scientific/ScientificValue : java/io/Serializable, java/lang/Comparable {
	public fun compareTo (Lcom/splendo/kaluga/scientific/ScientificValue;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getDecimalValue ()Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getUnit ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public abstract fun getValue ()Ljava/lang/Number;
}

public final class com/splendo/kaluga/scientific/ScientificValueKt {
	public static final fun div (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun div (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun div (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun div (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun div (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun div (Lcom/splendo/kaluga/scientific/ScientificValue;Ljava/lang/Number;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun div (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun div (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun getDecimalFraction (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun minus (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun minus (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun minus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun minus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun minus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun minus (Lcom/splendo/kaluga/scientific/ScientificValue;Ljava/lang/Number;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun minus (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun minus (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/scientific/ScientificValue;Ljava/lang/Number;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun plus (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun plus (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun split-7J1iaxU (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/Pair;
	public static synthetic fun split-7J1iaxU$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlin/Pair;
	public static final fun split-9-Eitbk (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/Pair;
	public static synthetic fun split-9-Eitbk$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlin/Pair;
	public static final fun split-BzPDsQc (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;)Lkotlin/Pair;
	public static synthetic fun split-BzPDsQc$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;ILjava/lang/Object;)Lkotlin/Pair;
	public static final fun split-dZZXe8Y (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;)Lkotlin/Pair;
	public static synthetic fun split-dZZXe8Y$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;ILjava/lang/Object;)Lkotlin/Pair;
	public static final fun times (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun times (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun times (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun times (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun times (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun times (Lcom/splendo/kaluga/scientific/ScientificValue;Ljava/lang/Number;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun times (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun times (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun toComponents-MLW3aMY (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;
	public static synthetic fun toComponents-MLW3aMY$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function3;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun toComponents-QEa2snw (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function4;)Ljava/lang/Object;
	public static synthetic fun toComponents-QEa2snw$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function4;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun toComponents-dBG4VAU (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function5;)Ljava/lang/Object;
	public static synthetic fun toComponents-dBG4VAU$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function5;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun toComponents-i_VnzYk (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static synthetic fun toComponents-i_VnzYk$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;ILcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/scientific/ShortScientificArray : com/splendo/kaluga/scientific/ScientificArray {
	public synthetic fun get (I)Ljava/lang/Number;
	public fun get (I)Ljava/lang/Short;
	public fun getSize ()I
	public abstract fun getValues ()[S
	public fun iterator ()Ljava/util/Iterator;
}

public final class com/splendo/kaluga/scientific/ShortScientificArray$DefaultImpls {
	public static fun get (Lcom/splendo/kaluga/scientific/ShortScientificArray;I)Ljava/lang/Short;
	public static fun getDecimalValues (Lcom/splendo/kaluga/scientific/ShortScientificArray;)Ljava/util/List;
	public static fun getSize (Lcom/splendo/kaluga/scientific/ShortScientificArray;)I
	public static fun iterator (Lcom/splendo/kaluga/scientific/ShortScientificArray;)Ljava/util/Iterator;
}

public abstract class com/splendo/kaluga/scientific/UndefinedQuantityType {
	public static final field Companion Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Custom : com/splendo/kaluga/scientific/UndefinedQuantityType {
	public static final field Companion Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom$Companion;
	public synthetic fun <init> (ILjava/lang/Object;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;Ljava/lang/Object;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustomQuantity ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Custom$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Custom$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Dividing : com/splendo/kaluga/scientific/UndefinedQuantityType {
	public static final field Companion Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun copy (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDenominator ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun getNumerator ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Dividing$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Dividing$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Extended : com/splendo/kaluga/scientific/UndefinedQuantityType {
	public static final field Companion Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;
	public final fun copy (Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtended ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$PhysicalQuantityWithDimension;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Extended$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Extended$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying : com/splendo/kaluga/scientific/UndefinedQuantityType {
	public static final field Companion Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun copy (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLeft ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun getRight ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal : com/splendo/kaluga/scientific/UndefinedQuantityType {
	public static final field Companion Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/UndefinedQuantityType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public final fun copy (Lcom/splendo/kaluga/scientific/UndefinedQuantityType;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;Lcom/splendo/kaluga/scientific/UndefinedQuantityType;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReciprocal ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/UndefinedScientificValue : com/splendo/kaluga/scientific/ScientificValue {
}

public final class com/splendo/kaluga/scientific/UndefinedScientificValue$DefaultImpls {
	public static fun compareTo (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)I
	public static fun getDecimalValue (Lcom/splendo/kaluga/scientific/UndefinedScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/UndefinedScientificValueKt {
	public static final fun imperialValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun imperialValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun metricAndImperialValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun metricAndImperialValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun metricAndUKImperialValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun metricAndUKImperialValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun metricAndUSCustomaryValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun metricAndUSCustomaryValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun metricValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun metricValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun ukImperialValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun ukImperialValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
	public static final fun usCustomaryValueAsDefaultUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultUndefinedScientificValue;
	public static final fun usCustomaryValueAsUndefined (Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/UndefinedScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertFromForceAndMassKt {
	public static final fun accelerationFromForceAndMass (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun accelerationFromForceAndMassDefault (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertFromJoltAndTimeKt {
	public static final fun accelerationFromJoltAndTime (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun accelerationFromJoltAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertFromSpeedAndTimeKt {
	public static final fun accelerationFromSpeedAndTime (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun accelerationFromSpeedAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertToForceKt {
	public static final fun accelerationTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesGrain (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesImperialTon (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesOunce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesPound (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAccelerationTimesUSTon (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAccelerationTimesGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAccelerationTimesMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesGrain (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesImperialTon (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesKilogram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesMilligram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesOunce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesPound (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesTonne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationTimesUSTon (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertToJoltKt {
	public static final fun imperialAccelerationDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAccelerationDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialAccelerationDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun speedDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertToSpeedKt {
	public static final fun imperialAccelerationTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAccelerationTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun speedTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/acceleration/ConvertToTimeKt {
	public static final fun joltDivAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/action/ConvertFromEnergyAndTimeKt {
	public static final fun actionFromEnergyAndTime (Lcom/splendo/kaluga/scientific/unit/Action;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun actionFromEnergyAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Action;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/action/ConvertToEnergyKt {
	public static final fun actionDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialActionDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricActionDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialActionDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/action/ConvertToTimeKt {
	public static final fun actionDivEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertFromCatalysisAndTimeKt {
	public static final fun amountOfSubstanceFromCatalysisAndTime (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun amountOfSubstanceFromCatalysisAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertFromEnergyAndMolarEnergyKt {
	public static final fun amountOfSubstanceFromEnergyAndMolarEnergy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun amountOfSubstanceFromEnergyAndMolarEnergyDefault (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertFromMolalityAndWeightKt {
	public static final fun amountOfSubstanceFromMolalityAndWeight (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun amountOfSubstanceFromMolalityAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertFromMolarityAndVolumeKt {
	public static final fun amountOfSubstanceFromMolarityAndVolume (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun amountOfSubstanceFromMolarityAndVolumeDefault (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertFromVolumeAndMolarVolumeKt {
	public static final fun amountOfSubstanceFromVolumeAndMolarVolume (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun amountOfSubstanceFromVolumeAndMolarVolumeDefault (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertFromWeightAndMolarMassKt {
	public static final fun amountOfSubstanceFromWeightAndMolarMass (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun amountOfSubstanceFromWeightAndMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToCatalysticActivityKt {
	public static final fun amountOfSubstanceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToEnergyKt {
	public static final fun amountOfSubstanceTimesImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMetricAndImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMetricMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToMolalityKt {
	public static final fun amountOfSubstanceDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToMolarityKt {
	public static final fun amountOfSubstanceDivImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivMetricVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToRadioactivityKt {
	public static final fun decaysWithHalfLife (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToTimeKt {
	public static final fun amountOfSubstanceDivCatalysticActivity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToVolumeKt {
	public static final fun amountOfSubstanceDivImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivMetricMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUKImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUSCustomaryMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMetricMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesUKImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesUSCustomaryMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/amountOfSubstance/ConvertToWeightKt {
	public static final fun amountOfSubstanceDivImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivMetricMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceDivUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMetricMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun amountOfSubstanceTimesUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angle/ConvertFromAngularVelocityAndTimeKt {
	public static final fun angleFromAngularVelocityAndTime (Lcom/splendo/kaluga/scientific/unit/Angle;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun angleFromAngularVelocityAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Angle;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angle/ConvertToAngularVelocityKt {
	public static final fun angleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angle/ConvertToTimeKt {
	public static final fun angleDivAngularVelocity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularAcceleration/ConvertFromAngularVelocityAndTimeKt {
	public static final fun angularAccelerationFromAngularVelocityAndTime (Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun angularAccelerationFromAngularVelocityAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularAcceleration/ConvertToAngularVelocityKt {
	public static final fun angularAccelerationTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularVelocity/ConvertFromAngleAndTimeKt {
	public static final fun angularVelocityFromAngleAndTime (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun angularVelocityFromAngleAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularVelocity/ConvertFromAngularAccelerationAndTimeKt {
	public static final fun angularVelocityFromAngularAccelerationAndTime (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun angularVelocityFromAngularAccelerationAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularVelocity/ConvertToAngleKt {
	public static final fun angularVelocityTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularVelocity/ConvertToAngularAccelerationKt {
	public static final fun angularVelocityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/angularVelocity/ConvertToTimeKt {
	public static final fun angularVelocityDivAngularAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromEnergyAndSurfaceTensionKt {
	public static final fun areaFromEnergyAndSurfaceTension (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromEnergyAndSurfaceTensionDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromForceAndPressureKt {
	public static final fun areaFromForceAndPressure (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromForceAndPressureDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromKinematicViscosityAndTimeKt {
	public static final fun areaFromKinematicViscosityAndTime (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromKinematicViscosityAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromLengthKt {
	public static final fun areaFromLengthAndWidth (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromLengthAndWidthDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromLinearMassDensityAndDensityKt {
	public static final fun areaFromLinearMassDensityAndDensity (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromLinearMassDensityAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromLinearMassDensityAndSpecificVolumeKt {
	public static final fun areaFromLinearMassDensityAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromLinearMassDensityAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromLuminousEnergyAndLuminousExposureKt {
	public static final fun areaFromLuminousEnergyAndExposure (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromLuminousEnergyAndExposureDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromLuminousFluxAndIlluminanceKt {
	public static final fun areaFromFluxAndIlluminance (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromFluxAndIlluminanceDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromLuminousIntensityAndLuminanceKt {
	public static final fun areaFromLuminousIntensityAndLuminance (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromLuminousIntensityAndLuminanceDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromMagneticFluxAndInductionKt {
	public static final fun areaFromFluxAndInduction (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromFluxAndInductionDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromMomentumAndDynamicViscosityKt {
	public static final fun areaFromMomentumAndDynamicViscosity (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromMomentumAndDynamicViscosityDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromVolumeAndLengthKt {
	public static final fun areaFromVolumeAndHeight (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromVolumeAndHeightDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromVolumetricFlowAndFluxKt {
	public static final fun areaFromVolumetricFlowAndVolumetricFlux (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromVolumetricFlowAndVolumetricFluxDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertFromWeightAndAreaDensityKt {
	public static final fun areaFromWeightAndAreaDensity (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaFromWeightAndAreaDensityDefault (Lcom/splendo/kaluga/scientific/unit/Area;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToEnergyKt {
	public static final fun areaTimesSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialSurfaceTensionTimes (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareCentimeterTimesMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareInchTimesImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareInchTimesUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareInchTimesUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToForceKt {
	public static final fun areaTimesPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialTonSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialTonSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesKipSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesKipSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesOunceSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUsTonSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUsTonSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareCentimeterTimesBarye (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareCentimeterTimesBaryeMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToKinematicViscosityKt {
	public static final fun areaDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToLengthKt {
	public static final fun areaDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareCentimeterDivCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareDecameterDivDecameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareDecimeterDivDecimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareFootDivFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareGigameterDivGigameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareHectometerDivHectometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareInchDivInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareKilometerDivKilometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMegameterDivMegameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMeterDivMeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMicrometerDivMicrometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMileDivMile (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMillimeterDivMillimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareNanometerDivNanometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareYardDivYard (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToLinearMassDensityKt {
	public static final fun areaDivSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun areaTimesDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDivMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToLuminousEnergyKt {
	public static final fun areaTimesExposure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialExposure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricExposure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToLuminousFluxKt {
	public static final fun areaTimesIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToLuminousIntensityKt {
	public static final fun areaTimesLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToMagneticFluxKt {
	public static final fun areaTimesInduction (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareCentimeterTimesGauss (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToMomentumKt {
	public static final fun areaTimesDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUKImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUSCustomaryDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToSpecificVolumeKt {
	public static final fun areaDivLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivUKImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDivUSCustomaryLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDivMetricLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToTimeKt {
	public static final fun areaDivKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToVolumeKt {
	public static final fun acreTimesFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun acreTimesInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun areaTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareCentimeterTimesCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareDecameterTimesDecameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareDecimeterTimesDecimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareFootTimesFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareGigameterTimesGigameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareHectometerTimesHectometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareInchTimesInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareKilometerTimesKilometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMegameterTimesMegameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMeterTimesMeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMicrometerTimesMicrometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMileTimesMile (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareMillimeterTimesMillimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareNanometerTimesNanometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun squareYardTimesYard (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToVolumetricFlowKt {
	public static final fun areaTimesVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUKImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesUSCustomaryVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/area/ConvertToWeightKt {
	public static final fun areaTimesAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityTimesUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaTimesImperialUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaTimesMetricAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertFromDensityAndLengthKt {
	public static final fun areaDensityFromDensityAndLength (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaDensityFromDensityAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertFromLengthAndSpecificVolumeKt {
	public static final fun areaDensityFromLengthAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaDensityFromLengthAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertFromLinearMassDensityAndLengthKt {
	public static final fun areaDensityFromLinearMassDensityAndLength (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaDensityFromLinearMassDensityAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertFromWeightAndAreaKt {
	public static final fun areaDensityFromWeightAndArea (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun areaDensityFromWeightAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertToDensityKt {
	public static final fun areaDensityDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDensityDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertToLengthKt {
	public static final fun areaDensityDivDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun areaDensityTimesSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDensityDivMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDensityTimesMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertToLinearMassDensityKt {
	public static final fun areaDensityTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDensityTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/areaDensity/ConvertToWeightKt {
	public static final fun areaDensityTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialAreaDensityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAreaDensityTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialAreaDensityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryAreaDensityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/catalysticActivity/ConvertFromAmountOfSubstanceAndTimeKt {
	public static final fun catalysticActivityFromAmountOfSubstanceAndTime (Lcom/splendo/kaluga/scientific/unit/CatalysticActivity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun catalysticActivityFromAmountOfSubstanceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/CatalysticActivity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/catalysticActivity/ConvertToAmountOfSubstanceKt {
	public static final fun catalysticActivityTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/decimal/ConvertFromDimensionlessKt {
	public static final fun div (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun times (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/converter/decimal/ConvertToFrequencyKt {
	public static final fun decimalDivMinute (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun decimalDivTime (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun numberDivMinute (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun numberDivTime (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/decimal/ConvertToRadioactivityKt {
	public static final fun decimalDivTime (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun numberDivTime (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/decimal/ConvertToTimeKt {
	public static final fun decimalDivBPM (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun decimalDivFrequency (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun decimalDivRadioactivity (Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun numberDivBPM (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun numberDivFrequency (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun numberDivRadioactivity (Ljava/lang/Number;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromAreaDensityAndLengthKt {
	public static final fun densityFromAreaDensityAndLength (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromAreaDensityAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromDynamicViscosityAndKinematicViscosityKt {
	public static final fun densityFromDynamicViscosityAndKinematicViscosity (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromDynamicViscosityAndKinematicViscosityDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromLinearMassDensityAndAreaKt {
	public static final fun densityFromLinearMassDensityAndArea (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromLinearMassDensityAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromMolarMassAndMolarVolumeKt {
	public static final fun densityFromMolarMassAndMolarVolume (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromMolarMassAndMolarVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromMolarityAndMolalityKt {
	public static final fun densityFromMolarityAndMolality (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromMolarityAndMolalityDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromMolarityAndMolarMassKt {
	public static final fun densityFromMolarityAndMolarMass (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromMolarityAndMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromSpecificVolumeKt {
	public static final fun densityFromInverseSpecificVolume (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromInverseSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertFromWeightAndVolumeKt {
	public static final fun densityFromWeightAndVolume (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun densityFromWeightAndVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Density;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToAreaDensityKt {
	public static final fun densityTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToDynamicViscosityKt {
	public static final fun densityTimesKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityTimesMetricKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToLinearMassDensityKt {
	public static final fun densityTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToMolarMassKt {
	public static final fun densityDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun densityTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToMolarityKt {
	public static final fun densityDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun densityTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToSpecificVolumeKt {
	public static final fun densitySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensitySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensitySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensitySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensitySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/density/ConvertToWeightKt {
	public static final fun densityTimesVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDensityTimesUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDensityTimesMetricVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDensityTimesUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDensityTimesUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dimensionless/ConvertToAnyUnitKt {
	public static final fun dimensionlessDivValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dimensionlessTimesValue (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun divDimensionless (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timesDimensionless (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun valueDivDimensionless (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun valueTimesDimensionless (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dimensionless/ConvertToDecimalKt {
	public static final fun convertToOneByDividing (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun convertToOneByMultiplying (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun div (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun times (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertFromKinematicViscosityAndDensityKt {
	public static final fun dynamicViscosityFromKinematicViscosityAndDensity (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun dynamicViscosityFromKinematicViscosityAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertFromMomentumAndAreaKt {
	public static final fun dynamicViscosityFromMomentumAndArea (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun dynamicViscosityFromMomentumAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertFromPressureAndTimeKt {
	public static final fun dynamicViscosityFromPressureAndTime (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun dynamicViscosityFromPressureAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertToDensityKt {
	public static final fun dynamicViscosityDivKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDynamicViscosityDivImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDynamicViscosityDivMetricKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDynamicViscosityDivImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDynamicViscosityDivImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertToKinematicViscosityKt {
	public static final fun dynamicViscosityDivDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDynamicViscosityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDynamicViscosityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDynamicViscosityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDynamicViscosityDivMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDynamicViscosityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDynamicViscosityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDynamicViscosityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDynamicViscosityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertToMomentumKt {
	public static final fun dynamicViscosityTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDynamicViscosityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDynamicViscosityTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDynamicViscosityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDynamicViscosityTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertToPressureKt {
	public static final fun dynamicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialDynamicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricDynamicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialDynamicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryDynamicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/dynamicViscosity/ConvertToTimeKt {
	public static final fun dynamicViscosityDivPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCapacitance/ConvertFromElectricChargeAndVoltageKt {
	public static final fun capacitanceFromChargeAndVoltage (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun capacitanceFromChargeAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCapacitance/ConvertFromElectricConductanceAndFrequencyKt {
	public static final fun capacitanceFromConductanceAndFrequency (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun capacitanceFromConductanceAndFrequencyDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCapacitance/ConvertFromTimeAndElectricResistanceKt {
	public static final fun capacitanceFromTimeAndResistance (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun capacitanceFromTimeAndResistanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCapacitance/ConvertToElectricChargeKt {
	public static final fun abfaradTimesAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun capacitanceTimesVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCapacitance/ConvertToElectricConductanceKt {
	public static final fun abfaradTimesFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun capacitanceTimesFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCapacitance/ConvertToTimeKt {
	public static final fun capacitanceTimesResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertFromElectricCapacitanceAndVoltageKt {
	public static final fun chargeFromCapacitanceAndVoltage (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun chargeFromCapacitanceAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertFromElectricCurrentAndTimeKt {
	public static final fun chargeFromCurrentAndTime (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun chargeFromCurrentAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertFromEnergyAndVoltageKt {
	public static final fun chargeFromEnergyAndVoltage (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun chargeFromEnergyAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertFromMagneticFluxAndElectricResistanceKt {
	public static final fun chargeFromFluxAndResistance (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun chargeFromFluxAndResistanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertToElectricCapacitanceKt {
	public static final fun abcoulombDivAbVolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun chargeDivVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertToElectricCurrentKt {
	public static final fun abcoulombDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun chargeDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertToEnergyKt {
	public static final fun abcoulombTimesAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun chargeTimesVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertToMagneticFluxKt {
	public static final fun abcoulombTimesAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun chargeTimesResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertToTimeKt {
	public static final fun chargeDivCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCharge/ConvertToVoltageKt {
	public static final fun abcoulombDivAbfarad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun chargeDivCapacitance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertFromElectricCapacitanceAndFrequencyKt {
	public static final fun conductanceFromCapacitanceAndFrequency (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun conductanceFromCapacitanceAndFrequencyDefault (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertFromElectricCurrentAndVoltageKt {
	public static final fun conductanceFromCurrentAndVoltage (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun conductanceFromCurrentAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertFromElectricResistanceKt {
	public static final fun electricConductanceFromInvertedResistance (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun electricConductanceFromInvertedResistanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertToElectricCapacitanceKt {
	public static final fun absiemensDivFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun conductanceDivFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertToElectricCurrentKt {
	public static final fun absiemensTimesAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun conductanceTimesVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertToElectricResistanceKt {
	public static final fun abSiemensResistance (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun resistance (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricConductance/ConvertToFrequencyKt {
	public static final fun conductanceDivCapacitance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertFromElectricChargeAndTimeKt {
	public static final fun currentFromChargeAndTime (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun currentFromChargeAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertFromEnergyAndMagneticFluxKt {
	public static final fun currentFromEnergyAndFlux (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun currentFromEnergyAndFluxDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertFromMagneticFluxAndElectricInductanceKt {
	public static final fun currentFromFluxAndInductance (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun currentFromFluxAndInductanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertFromPowerAndVoltageKt {
	public static final fun currentFromPowerAndVoltage (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun currentFromPowerAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertFromVoltageAndElectricConductanceKt {
	public static final fun currentFromVoltageAndConductance (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun currentFromVoltageAndConductanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertFromVoltageAndElectricResistanceKt {
	public static final fun currentFromVoltageAndResistance (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun currentFromVoltageAndResistanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertToElectricChargeKt {
	public static final fun abampereTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertToElectricConductanceKt {
	public static final fun abampereDivAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotDivAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentDivVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertToEnergyKt {
	public static final fun abampereTimesMaxwell (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotTimesMaxwell (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentTimesFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertToMagneticFluxKt {
	public static final fun abampereTimesAbhenry (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotTimesAbhenry (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentTimesInductance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertToPowerKt {
	public static final fun abampereTimesAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotTimesAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentTimesVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricCurrent/ConvertToVoltageKt {
	public static final fun abampereDivAbsiemens (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abampereTimesAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotDivAbsiemens (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun biotTimesAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentDivConductance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun currentTimesResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricInductance/ConvertFromElectricResistanceAndFrequencyKt {
	public static final fun inductanceFromResistanceAndFrequency (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun inductanceFromResistanceAndFrequencyDefault (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricInductance/ConvertFromElectricResistanceAndTimeKt {
	public static final fun inductanceFromResistanceAndTime (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun inductanceFromResistanceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricInductance/ConvertFromMagneticFluxAndElectricCurrentKt {
	public static final fun inductanceFromFluxAndCurrent (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun inductanceFromFluxAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricInductance/ConvertToElectricResistanceKt {
	public static final fun abhenryDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abhenryTimesFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inductanceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inductanceTimesFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricInductance/ConvertToMagneticFluxKt {
	public static final fun abhenryTimesAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abhenryTimesBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inductanceTimesCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricInductance/ConvertToTimeKt {
	public static final fun inductanceDivResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertFromElectricConductanceKt {
	public static final fun electricResistanceFromInvertedConductance (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun electricResistanceFromInvertedConductanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertFromElectricInductanceAndFrequencyKt {
	public static final fun resistanceFromInductanceAndFrequency (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun resistanceFromInductanceAndFrequencyDefault (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertFromElectricInductanceAndTimeKt {
	public static final fun resistanceFromInductanceAndTime (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun resistanceFromInductanceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertFromMagneticFluxAndElectricChargeKt {
	public static final fun resistanceFromFluxAndCharge (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun resistanceFromFluxAndChargeDefault (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertFromTimeAndElectricCapacitanceKt {
	public static final fun resistanceFromTimeAndCapacitance (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun resistanceFromTimeAndCapacitanceDefault (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertFromVoltageAndElectricCurrentKt {
	public static final fun resistanceFromVoltageAndCurrent (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun resistanceFromVoltageAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertToElectricConductanceKt {
	public static final fun abOhmConductance (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun conductance (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertToElectricInductanceKt {
	public static final fun abohmDivFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abohmTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun resistanceDivFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun resistanceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertToFrequencyKt {
	public static final fun resistanceDivInductance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertToMagneticFluxKt {
	public static final fun abohmTimesAbcoulomb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun resistanceTimesCharge (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertToTimeKt {
	public static final fun resistanceTimesCapacitance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/electricResistance/ConvertToVoltageKt {
	public static final fun abohmTimesAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abohmTimesBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun resistanceTimesCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromActionAndTimeKt {
	public static final fun energyFromActionAndTime (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromActionAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromElectricChargeAndVoltageKt {
	public static final fun energyFromChargeAndVoltage (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromChargeAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromForceAndDistanceKt {
	public static final fun energyFromForceAndDistance (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromForceAndDistanceDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromHeatCapacityAndTemperatureKt {
	public static final fun energyFromHeatCapacityAndTemperature (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromHeatCapacityAndTemperatureDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromIonizingRadiationAbsorbedDoseAndWeightKt {
	public static final fun energyFromAbsorbedDoseAndWeight (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromAbsorbedDoseAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromIonizingRadiationEquivalentDoseAndWeightKt {
	public static final fun energyFromEquivalentDoseAndWeight (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromEquivalentDoseAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromMagneticFluxAndElectricCurrentKt {
	public static final fun energyFromFluxAndCurrent (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromFluxAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromMolarEnergyAndAmountOfSubstanceKt {
	public static final fun energyFromMolarEnergyAndAmountOfSubstance (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromMolarEnergyAndAmountOfSubstanceDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromPowerAndTimeKt {
	public static final fun energyFromPowerAndTime (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromPowerAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromPressureAndVolumeKt {
	public static final fun energyFromPressureAndVolume (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromPressureAndVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromSpecificEnergyAndWeightKt {
	public static final fun energyFromSpecificEnergyAndWeight (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromSpecificEnergyAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertFromSurfaceTensionAndAreaKt {
	public static final fun energyFromSurfaceTensionAndArea (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun energyFromSurfaceTensionAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Energy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToActionKt {
	public static final fun energyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToAmountOfSubstanceKt {
	public static final fun energyDivMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToAreaKt {
	public static final fun energyDivSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToElectricChargeKt {
	public static final fun energyDivVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToElectricCurrentKt {
	public static final fun energyDivFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivMaxwell (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivMaxwell (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToForceKt {
	public static final fun energyDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToHeatCapacityKt {
	public static final fun energyDivTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomaryTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomaryTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyDivMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToIonizingRadiationAbsorbedDoseKt {
	public static final fun energyAbsorbedByWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergAbsorbedByGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleAbsorbedByGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToIonizingRadiationEquivalentDoseKt {
	public static final fun energyEquivalentDoseByWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergEquivalentDoseByGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleEquivalentDoseByGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToLengthKt {
	public static final fun energyDivForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivDyne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivDyneMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivDyne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivDyneMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForceDivPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivPoundal (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivOunceForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToMagneticFluxKt {
	public static final fun energyDivCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToMolarEnergyKt {
	public static final fun energyDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToPowerKt {
	public static final fun britishThermalUnitDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitDivMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun centijouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun centiwattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decajouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decawattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decijouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun deciwattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun energyDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForceDivMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForceDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gigajouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gigawattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hectojouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hectowattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun horsepowerHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun jouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilojouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilowattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun megajouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun megawattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun microjouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun microwattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun millijouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun milliwattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun nanojouleDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun nanowattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun wattHourDivHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToPressureKt {
	public static final fun energyDivVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivCubicCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivCubicCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForceDivCubicFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivCubicFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToSpecificEnergyKt {
	public static final fun energyDivWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToSurfaceTensionKt {
	public static final fun energyDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToTemperatureKt {
	public static final fun energyDivHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivMetricAndImperialHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomaryHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricAndUKImperialHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomaryHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyDivMetricHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToTimeKt {
	public static final fun britishThermalUnitDivBritishThermalUnitPerHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitDivBritishThermalUnitPerMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun energyDivPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForceDivFootPoundForcePerMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun horsepowerHourDivHorsepower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivInchPoundForcePerMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun wattHourDivWatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun wattHourDivWattMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun wattHourMultipleDivWatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun wattHourMultipleDivWattMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToVoltageKt {
	public static final fun energyDivCharge (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivAbcoulomb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivAbcoulomb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToVolumeKt {
	public static final fun energyDivPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivBarye (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivBaryeMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivBarye (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivBaryeMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundalDivPoundSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchOunceForceDivPoundSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForceDivPoundSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/energy/ConvertToWeightKt {
	public static final fun energyDivAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun energyDivEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun energyDivSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivRad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivRadMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivRem (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergDivRemMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivRad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivRadMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivRem (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergMultipleDivRemMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUKImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialEnergyDivUSCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivMetricSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUKImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialEnergyDivUSCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricEnergyDivMetricSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromEnergyAndLengthKt {
	public static final fun forceFromEnergyAndLength (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromEnergyAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromMomentumAndTimeKt {
	public static final fun forceFromMomentumAndTime (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromMomentumAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromPowerAndSpeedKt {
	public static final fun forceFromPowerAndSpeed (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromPowerAndSpeedDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromPressureAndAreaKt {
	public static final fun forceFromPressureAndArea (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromPressureAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromSurfaceTensionAndLengthKt {
	public static final fun forceFromSurfaceTensionAndLength (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromSurfaceTensionAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromWeightAndAccelerationKt {
	public static final fun forceFromMassAndAcceleration (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromMassAndAccelerationDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertFromYankAndTimeKt {
	public static final fun forceFromYankAndTime (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun forceFromYankAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Force;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToAccelerationKt {
	public static final fun dyneDivGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneMultipleDivGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceDivWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToAreaKt {
	public static final fun dyneDivBarye (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneDivBaryeMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneMultipleDivBarye (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneMultipleDivBaryeMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceDivPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceDivImperialTonSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceDivImperialTonSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipDivKipSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipDivPoundSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceForceDivOunceSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForceDivKiloPoundSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForceDivPoundSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForcePoundSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceDivUSTonSquareFeet (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceDivUSTonSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToEnergyKt {
	public static final fun dyneMultipleTimesCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneTimesCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceForceTimesInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForceTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForceTimesInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundalTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToLengthKt {
	public static final fun forceDivSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceDivMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToMomentumKt {
	public static final fun dyneMultipleTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun grainForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun milligramForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundalTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun tonneForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToPowerKt {
	public static final fun dyneMultipleTimesMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneTimesMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceTimesSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToPressureKt {
	public static final fun dyneDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneMultipleDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun grainForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundForceDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundalDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundalDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToSurfaceTensionKt {
	public static final fun forceDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToTimeKt {
	public static final fun forceDivYank (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToWeightKt {
	public static final fun dyneDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneMultipleDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun dyneMultipleDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun forceDivAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun grainForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun grainForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramForceDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilogramForceDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilogramForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun milligramForceDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun milligramForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun tonneForceDivMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun tonneForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceDivImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonForceDivMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/force/ConvertToYankKt {
	public static final fun forceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialForceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricForceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialForceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryForceDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertFromElectricResistanceAndInductanceKt {
	public static final fun frequencyFromResistanceAndInductance (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun frequencyFromResistanceAndInductanceDefault (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertFromElectricalConductanceAndCapacityKt {
	public static final fun frequencyFromConductanceAndCapacity (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun frequencyFromConductanceAndCapacityDefault (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertFromTimeKt {
	public static final fun frequency (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun frequency (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun frequencyFromInvertedTime (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun frequencyFromInvertedTimeDefault (Lcom/splendo/kaluga/scientific/unit/Frequency;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertToDecimalKt {
	public static final fun frequencyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertToElectricConductanceKt {
	public static final fun frequencyTimesAbfarad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun frequencyTimesCapacitance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertToElectricResistanceKt {
	public static final fun frequencyTimesAbhenry (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun frequencyTimesInductance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/frequency/ConvertToTimeKt {
	public static final fun beatsPerMinuteTime (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun time (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/heatCapacity/ConvertFromEnergyAndTemperatureKt {
	public static final fun heatCapacityFromEnergyAndTemperature (Lcom/splendo/kaluga/scientific/unit/HeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun heatCapacityFromEnergyAndTemperatureDefault (Lcom/splendo/kaluga/scientific/unit/HeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/heatCapacity/ConvertFromWeightAndSpecificHeatCapacityKt {
	public static final fun heatCapacityFromWeightAndSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/unit/HeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun heatCapacityFromWeightAndSpecificHeatCapacityDefault (Lcom/splendo/kaluga/scientific/unit/HeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/heatCapacity/ConvertToEnergyKt {
	public static final fun heatCapacityTimesTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialHeatCapacityTimesMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricHeatCapacityTimesMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialHeatCapacityTimesMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryHeatCapacityTimesUSCustomaryTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/heatCapacity/ConvertToSpecificHeatCapacityKt {
	public static final fun heatCapacityDivWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialHeatCapacityDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialHeatCapacityDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialHeatCapacityDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricHeatCapacityDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialHeatCapacityDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialHeatCapacityDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryHeatCapacityDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryHeatCapacityDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/heatCapacity/ConvertToWeightKt {
	public static final fun heatCapacityDivSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialHeatCapacityDivMetricSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialHeatCapacityDivUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricHeatCapacityDivMetricSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialHeatCapacityDivUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryHeatCapacityDivUSCustomarySpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertFromLuminanceAndSolidAngleKt {
	public static final fun illuminanceFromLuminanceAndSolidAngle (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun illuminanceFromLuminanceAndSolidAngleDefault (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertFromLuminousExposureAndTimeKt {
	public static final fun illuminanceFromLuminousExposureAndTime (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun illuminanceFromLuminousExposureAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertFromLuminousFluxAndAreaKt {
	public static final fun illuminanceFromLuminousFluxAndArea (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun illuminanceFromLuminousFluxAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertToLuminanceKt {
	public static final fun illuminanceDivSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialIlluminanceDivSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun photDivSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun photMultipleDivSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertToLuminousExposureKt {
	public static final fun illuminanceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialIlluminanceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricIlluminanceTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertToLuminousFluxKt {
	public static final fun illuminanceTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/illuminance/ConvertToSolidAngleKt {
	public static final fun illuminanceDivLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationAbsorbedDose/ConvertFromEnergyAndWeightKt {
	public static final fun absorbedDoseFromEnergyAndWeight (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun absorbedDoseFromEnergyAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationAbsorbedDose/ConvertFromSpecificEnergyKt {
	public static final fun specificEnergyFromAbsorbedDose (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromAbsorbedDoseDefault (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationAbsorbedDose/ConvertToEnergyKt {
	public static final fun absorbedDoseTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun absorbedDoseTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun absorbedDoseTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun absorbedDoseTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun radMultipleTimesGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun radTimesGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationAbsorbedDose/ConvertToSpecificEnergyKt {
	public static final fun specificEnergyFromAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyFromRad (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyFromRadMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationEquivalentDose/ConvertFromEnergyAndWeightKt {
	public static final fun equivalentDoseFromEnergyAndWeight (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun equivalentDoseFromEnergyAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationEquivalentDose/ConvertFromSpecificEnergyKt {
	public static final fun specificEnergyFromEquivalentDose (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromEquivalentDoseDefault (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationEquivalentDose/ConvertToEnergyKt {
	public static final fun equivalentDoseTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun equivalentDoseTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun equivalentDoseTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun equivalentDoseTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun roentgenEquivalentManMultipleTimesGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun roentgenEquivalentManTimesGram (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/ionizingRadiationEquivalentDose/ConvertToSpecificEnergyKt {
	public static final fun specificEnergyFromEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyFromRoentgenEquivalentManMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyFromRoentgewnEquivalentMan (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/jolt/ConvertFromAccelerationAndTimeKt {
	public static final fun joltFromAccelerationAndTime (Lcom/splendo/kaluga/scientific/unit/Jolt;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun joltFromAccelerationAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Jolt;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/jolt/ConvertFromYankAndMassKt {
	public static final fun joltFromYankAndMass (Lcom/splendo/kaluga/scientific/unit/Jolt;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun joltFromYankAndMassDefault (Lcom/splendo/kaluga/scientific/unit/Jolt;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/jolt/ConvertToAccelerationKt {
	public static final fun imperialJoltTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun joltTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialJoltTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricJoltTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/jolt/ConvertToYankKt {
	public static final fun imperialJoltTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialJoltTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialJoltTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun joltTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricJoltTimesMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertFromAreaAndTimeKt {
	public static final fun kinematicViscosityFromAreaAndTime (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun kinematicViscosityFromAreaAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertFromDynamicViscosityAndDensityKt {
	public static final fun kinematicViscosityFromDynamicViscosityAndDensity (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun kinematicViscosityFromDynamicViscosityAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertFromSpecificEnergyAndTimeKt {
	public static final fun kinematicViscosityFromSpecificEnergyAndTime (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun kinematicViscosityFromSpecificEnergyAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertToAreaKt {
	public static final fun imperialKinematicViscosityTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kinematicViscosityTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricKinematicViscosityTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertToDynamicViscosityKt {
	public static final fun imperialKinematicViscosityTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialKinematicViscosityTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialKinematicViscosityTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kinematicViscosityTimesDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricKinematicViscosityTimesMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertToSpecificEnergyKt {
	public static final fun imperialKinematicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kinematicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricKinematicViscosityDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/kinematicViscosity/ConvertToTimeKt {
	public static final fun kinematicViscosityDivSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromAreaAndLengthKt {
	public static final fun widthFromAreaAndLength (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun widthFromAreaAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromAreaDensityAndDensityKt {
	public static final fun lengthFromAreaDensityAndDensity (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun lengthFromAreaDensityAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromAreaDensityAndSpecificVolumeKt {
	public static final fun lengthFromAreaDensityAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun lengthFromAreaDensityAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromEnergyAndForceKt {
	public static final fun lengthFromEnergyAndForce (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun lengthFromEnergyAndForceDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromForceAndSurfaceTensionKt {
	public static final fun lengthFromForceAndSurfaceTension (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun lengthFromForceAndSurfaceTensionDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromLinearMassDensityAndDensityKt {
	public static final fun lengthFromLinearMassDensityAndDensity (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun lengthFromLinearMassDensityAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromSpeedAndTimeKt {
	public static final fun distanceFromSpeedAndTime (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun distanceFromSpeedAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromVolumeAndAreaKt {
	public static final fun heightFromVolumeAndArea (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun heightFromVolumeAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun heightFromVolumeLengthAndWidth (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun heightFromVolumeLengthAndWidthDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertFromWeightAndLinearMassDensityKt {
	public static final fun lengthFromWeightAndLinearMassDensity (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun lengthFromWeightAndLinearMassDensityDefault (Lcom/splendo/kaluga/scientific/unit/Length;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToAreaDensityKt {
	public static final fun imperialLengthDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthDivUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthDivUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthDivSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthDivMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToAreaKt {
	public static final fun centimeterTimesCentieter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decameterTimesDecameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decimeterTimesDecimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footTimesFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gigameterTimesGigameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hectometerTimesHectometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchTimesInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilometerTimesKilometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun megameterTimesMegameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun meterTimesMeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun micrometerTimesMicrometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun mileTimesMile (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun millimeterTimesMillimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun nanometerTimesNanometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun yardTimesYard (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToEnergyKt {
	public static final fun centimeterTimesDyne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun centimeterTimesDyneMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesPoundal (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchTimesOunceForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchTimesPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToForceKt {
	public static final fun imperialLengthTimesImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUKImperialSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUSCustomarySurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricSurfaceTension (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToLinearMassDensityKt {
	public static final fun imperialLengthTimesImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToSpecificVolumeKt {
	public static final fun imperialLengthDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthDivUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthDivUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthDivAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthDivMetricAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToSpeedKt {
	public static final fun imperialLengthDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToTimeKt {
	public static final fun lengthDivSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToVolumeKt {
	public static final fun centimeterTimesSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decameterTimesSquareDecameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decimeterTimesSquareDecimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footTimesAcre (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footTimesSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gigameterTimesSquareGigameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hectometerTimesSquarehectometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchTimesAcre (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchTimesSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilometerTimesSquareKilometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilometerTimesSquareMegameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun meterTimesSquareMeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun micrometerTimesSquareMicrometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun mileTimesSquareMile (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun millimeterTimesSquareMillimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun nanometerTimesSquareNanometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun yardTimesSquareYard (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/length/ConvertToWeightKt {
	public static final fun imperialLengthTimesImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthTimesUSCustomaryLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLengthUKImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lengthTimesLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLengthTimesMetricLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertFromAreaAndSpecificVolumeKt {
	public static final fun linearMassDensityFromAreaAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun linearMassDensityFromAreaAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertFromAreaDensityAndLengthKt {
	public static final fun linearMassDensityFromAreaDensityAndLength (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun linearMassDensityFromAreaDensityAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertFromDensityAndLengthKt {
	public static final fun linearMassDensityFromDensityAndLength (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun linearMassDensityFromDensityAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertFromWeightAndAreaKt {
	public static final fun linearMassDensityFromWeightAndArea (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun linearMassDensityFromWeightAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertToAreaDensityKt {
	public static final fun imperialLinearMassDensityDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun linearMassDensityDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLinearMassDensityDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertToAreaKt {
	public static final fun imperialLinearMassDensityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun linearMassDensityDivDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun linearMassDensityTimesSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLinearMassDensityDivMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLinearMassDensityTimesMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertToDensityKt {
	public static final fun imperialLinearMassDensityDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun linearMassDensityDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLinearMassDensityDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertToLengthKt {
	public static final fun imperialLinearMassDensityDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityDivUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialLinearMassDensityDivUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun linearMassDensityDivAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLinearMassDensityDivMetricAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityDivUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityDivUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/linearMassDensity/ConvertToWeightKt {
	public static final fun imperialLinearMassDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun linearMassDensityTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLinearMassDensityTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialLinearMassDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryLinearMassDensityTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminance/ConvertFromIlluminanceAndSolidAngleKt {
	public static final fun luminanceFromIlluminanceAndSolidAngle (Lcom/splendo/kaluga/scientific/unit/Luminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminanceFromIlluminanceAndSolidAngleDefault (Lcom/splendo/kaluga/scientific/unit/Luminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminance/ConvertFromLuminousIntensityAndAreaKt {
	public static final fun luminanceFromLuminousIntensityAndArea (Lcom/splendo/kaluga/scientific/unit/Luminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminanceFromLuminousIntensityAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Luminance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminance/ConvertToIlluminanceKt {
	public static final fun imperialLuminanceTimesSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lambertTimesSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminanceTimesSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLuminanceTimesSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun stilbTimesSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminance/ConvertToLuminousIntensityKt {
	public static final fun luminanceTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousEnergy/ConvertFromLuminousExposureAndAreaKt {
	public static final fun luminousEnergyFromLuminousExposureAndArea (Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousEnergyFromLuminousExposureAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousEnergy/ConvertFromLuminousFluxAndTimeKt {
	public static final fun luminousEnergyFromLuminousFluxAndTime (Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousEnergyFromLuminousFluxAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousEnergy/ConvertToAreaKt {
	public static final fun luminousEnergyDivExposure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousEnergyDivImperialExposure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousEnergyDivMetricExposure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousEnergy/ConvertToLuminousExposureKt {
	public static final fun luminousEnergyDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousEnergyDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousEnergyDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousEnergy/ConvertToLuminousFluxKt {
	public static final fun luminousEnergyDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousEnergy/ConvertToTimeKt {
	public static final fun luminousEnergyDivLuminousFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousExposure/ConvertFromIlluminanceAndTimeKt {
	public static final fun luminousExposureFromIlluminanceAndTime (Lcom/splendo/kaluga/scientific/unit/LuminousExposure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousExposureFromIlluminanceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/LuminousExposure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousExposure/ConvertFromLuminousEnergyAndAreaKt {
	public static final fun luminousExposureFromLuminousEnergyAndArea (Lcom/splendo/kaluga/scientific/unit/LuminousExposure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousExposureFromLuminousEnergyAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/LuminousExposure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousExposure/ConvertToIlluminanceKt {
	public static final fun imperialLuminousExposureDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousExposureDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLuminousExposureDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousExposure/ConvertToLuminousEnergyKt {
	public static final fun exposureTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialExposureTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricExposureTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousExposure/ConvertToTimeKt {
	public static final fun imperialLuminousExposureDivImperialIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousExposureDivIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricLuminousExposureDivMetricIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertFromIlluminanceAndAreaKt {
	public static final fun luminousFluxFromIlluminanceAndArea (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousFluxFromIlluminanceAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertFromLuminousEnergyAndTimeKt {
	public static final fun luminousFluxFromLuminousEnergyAndTime (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousFluxFromLuminousEnergyAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertFromLuminousIntensityAndSolidAngleKt {
	public static final fun luminousFluxFromIntensityAndSolidAngle (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousFluxFromIntensityAndSolidAngleDefault (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertToAreaKt {
	public static final fun fluxDivIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun fluxDivImperialIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun fluxDivPhot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun fluxDivPhotMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertToIlluminanceKt {
	public static final fun lumenDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lumenDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lumenDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun lumenDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertToLuminousEnergyKt {
	public static final fun LuminousFluxTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertToLuminousIntensityKt {
	public static final fun luminousFluxDivSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousFlux/ConvertToSolidAngleKt {
	public static final fun luminousFluxDivIntensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousIntensity/ConvertFromLuminanceAndAreaKt {
	public static final fun luminousIntensityFromLuminanceAndArea (Lcom/splendo/kaluga/scientific/unit/LuminousIntensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousIntensityFromLuminanceAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/LuminousIntensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousIntensity/ConvertFromLuminousFluxAndSolidAngleKt {
	public static final fun luminousIntensityFromLuminousFluxAndSolidAngle (Lcom/splendo/kaluga/scientific/unit/LuminousIntensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun luminousIntensityFromLuminousFluxAndSolidAngleDefault (Lcom/splendo/kaluga/scientific/unit/LuminousIntensity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousIntensity/ConvertToAreaKt {
	public static final fun luminousIntensityDivImperialLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivLambert (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivMetricLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivStilb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousIntensity/ConvertToLuminanceKt {
	public static final fun luminousIntensityDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun luminousIntensityDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/luminousIntensity/ConvertToLuminousFluxKt {
	public static final fun luminousIntensityTimesSolidAngle (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertFromElectricInductanceAndCurrentKt {
	public static final fun fluxFromInductanceAndCurrent (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun fluxFromInductanceAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertFromElectricResistanceAndChargeKt {
	public static final fun fluxFromResistanceAndCharge (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun fluxFromResistanceAndChargeDefault (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertFromEnergyAndElectricCurrentKt {
	public static final fun fluxFromEnergyAndCurrent (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun fluxFromEnergyAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertFromMagneticInductionAndAreaKt {
	public static final fun fluxFromInductionAndArea (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun fluxFromInductionAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertFromVoltageAndTimeKt {
	public static final fun fluxFromVoltageAndTime (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun fluxFromVoltageAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToAreaKt {
	public static final fun fluxDivInduction (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivGauss (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToElectricChargeKt {
	public static final fun fluxDivResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToElectricCurrentKt {
	public static final fun fluxDivInductance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivAbhenry (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToElectricInductanceKt {
	public static final fun fluxDivCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToElectricResistanceKt {
	public static final fun fluxDivCharge (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivAbcoulomb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToEnergyKt {
	public static final fun fluxTimesCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellTimesAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellTimesBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToMagneticInductionKt {
	public static final fun fluxDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToTimeKt {
	public static final fun fluxDivVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticFlux/ConvertToVoltageKt {
	public static final fun fluxDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun maxwellDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticInduction/ConvertFromMagneticFluxAndAreaKt {
	public static final fun inductionFromFluxAndArea (Lcom/splendo/kaluga/scientific/unit/MagneticInduction;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun inductionFromFluxAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/MagneticInduction;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/magneticInduction/ConvertToMagneticFluxKt {
	public static final fun gaussTimesSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inductionTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/massFlowRate/ConvertFromWeightAndAreaKt {
	public static final fun massFlowRateFromWeightAndArea (Lcom/splendo/kaluga/scientific/unit/MassFlowRate;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun massFlowRateFromWeightAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/MassFlowRate;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/massFlowRate/ConvertToWeightKt {
	public static final fun imperialMassFlowRateTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun massFlowRateTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMassFlowRateTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMassFlowRateTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMassFlowRateTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertFromAmountOfSubstanceAndWeightKt {
	public static final fun molalityFromAmountOfSubstanceAndWeight (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molalityFromAmountOfSubstanceAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertFromMolarMassKt {
	public static final fun molalityFromInvertedMolarMass (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molalityFromInvertedMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertFromMolarityAndDensityKt {
	public static final fun molalityFromMolarityAndDensity (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molalityFromMolarityAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertFromMolarityAndSpecificVolumeKt {
	public static final fun molalityFromMolarityAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molalityFromMolarityAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertFromSpecificEnergyAndMolarEnergyKt {
	public static final fun molalityFromSpecificEnergyAndMolarEnergy (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molalityFromSpecificEnergyAndMolarEnergyDefault (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertFromSpecificVolumeAndMolarVolumeKt {
	public static final fun molalityFromSpecificVolumeAndMolarVolume (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molalityFromSpecificVolumeAndMolarVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Molality;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertToAmountOfSubstanceKt {
	public static final fun molalityTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertToMolarMassKt {
	public static final fun imperialMolalityMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolalityMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertToMolarityKt {
	public static final fun molalityDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityDivMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityDivSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityDivUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityDivUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertToSpecificEnergyKt {
	public static final fun imperialMolalityTimesImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolalityTimesMetricAndImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolalityTimesMetricAndImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolalityTimesMetricMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityTimesImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityTimesMetricAndImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityTimesImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityTimesMetricAndImperialMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molality/ConvertToSpecificVolumeKt {
	public static final fun imperialMolalityDivImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolalityDivUKImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolalityDivUSCustomaryMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolalityTimesImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolalityTimesUKImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolalityTimesUSCustomaryMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolalityDivMetricMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolalityTimesMetricMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityDivMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molalityTimesMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityDivImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityDivUKImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityTimesImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolalityTimesUKImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityDivImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityDivUSCustomaryMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityTimesImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolalityTimesUSCustomaryMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarEnergy/ConvertFromEnergyAndAmountOfSubstanceKt {
	public static final fun molarEnergyFromEnergyAndAmountOfSubstance (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarEnergyFromEnergyAndAmountOfSubstanceDefault (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarEnergy/ConvertFromSpecificEnergyAndMolalityKt {
	public static final fun molarEnergyFromSpecificEnergyAndMolality (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarEnergyFromSpecificEnergyAndMolalityDefault (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarEnergy/ConvertFromSpecificEnergyAndMolarMassKt {
	public static final fun molarEnergyFromMolarMassAndSpecificEnergy (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarEnergyFromMolarMassAndSpecificEnergyDefault (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarEnergy/ConvertToEnergyKt {
	public static final fun imperialMolarEnergyTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarEnergyTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarEnergy/ConvertToMolarMassKt {
	public static final fun molarEnergyDivImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyDivMetricSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyDivSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyDivUKImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyDivUSCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarEnergy/ConvertToSpecificEnergyKt {
	public static final fun imperialMolarEnergyDivImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarEnergyDivUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarEnergyDivUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarEnergyTimesImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarEnergyTimesUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarEnergyTimesUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyDivImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyDivMetricMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyDivUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyDivUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyTimesImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyTimesMetricMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyTimesUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialMolarEnergyTimesUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarEnergyDivMetricMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarEnergyTimesMetricMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarEnergyTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertFromDensityAndMolarVolumeKt {
	public static final fun molarMassFromDensityAndMolarVolume (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarMassFromDensityAndMolarVolumeDefault (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertFromDensityAndMolarityKt {
	public static final fun molarMassFromDensityAndMolarity (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarMassFromDensityAndMolarityDefault (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertFromMolalityKt {
	public static final fun molarMassFromInvertedMolality (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarMassFromInvertedMolalityDefault (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertFromMolarEnergyAndSpecificEnergyKt {
	public static final fun molarMassFromMolarEnergyAndSpecificEnergy (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarMassFromMolarEnergyAndSpecificEnergyDefault (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertFromMolarVolumeAndSpecificVolumeKt {
	public static final fun molarMassFromMolarVolumeAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarMassFromMolarVolumeAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertFromWeightAndAmountOfSubstanceKt {
	public static final fun molarMassFromWeightAndAmountOfSubstance (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarMassFromWeightAndAmountOfSubstanceDefault (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertToDensityKt {
	public static final fun imperialMolarMassDivImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarMassDivUKImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarMassDivUSCustomaryMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarMassTimesImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarMassTimesUKImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarMassTimesUSCustomaryMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarMassDivMetricMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarMassTimesMetricMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarMassDivImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarMassDivUKImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarMassTimesImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarMassTimesUKImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarMassDivImperialMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarMassDivUSCustomaryMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarMassTimesImperialMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarMassTimesUSCustomaryMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertToMolalityKt {
	public static final fun imperialMolarMassMolality (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarMassMolality (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassMolality (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarMassMolality (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarMassMolality (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertToMolarEnergyKt {
	public static final fun molarMassTimesImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesMetricSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesUKImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesUSCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertToMolarVolumeKt {
	public static final fun molarMassDivDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassDivMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarMass/ConvertToWeightKt {
	public static final fun imperialMolarMassTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarMassTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarMassTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarMassTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarMassTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertFromMolarMassAndDensityKt {
	public static final fun molarVolumeFromMolarMassAndDensity (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarVolumeFromMolarMassAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertFromMolarityKt {
	public static final fun molarVolumeFromInvertedMolarity (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarVolumeFromInvertedMolarityDefault (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertFromSpecificVolumeAndMolalityKt {
	public static final fun molarVolumeFromSpecificVolumeAndMolality (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarVolumeFromSpecificVolumeAndMolalityDefault (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertFromSpecificVolumeAndMolarMassKt {
	public static final fun molarVolumeFromSpecificVolumeAndMolarMass (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarVolumeFromSpecificVolumeAndMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertFromVolumeAndAmountOfSubstanceKt {
	public static final fun molarVolumeFromVolumeAndAmountOfSubstance (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarVolumeFromVolumeAndAmountOfSubstanceDefault (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertToMolarMassKt {
	public static final fun molarVolumeDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeDivMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeDivSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeDivUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeDivUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertToMolarityKt {
	public static final fun imperialMolarVolumeMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarVolumeMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarVolumeMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarVolumeMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertToSpecificVolumeKt {
	public static final fun imperialMolarVolumeDivImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarVolumeDivUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarVolumeDivUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarVolumeTimesImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarVolumeTimesUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarVolumeTimesUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarVolumeDivMetricMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarVolumeTimesMetricMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarVolumeDivImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarVolumeDivUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarVolumeTimesImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarVolumeTimesUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarVolumeDivImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarVolumeDivUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarVolumeTimesImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarVolumeTimesUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarVolume/ConvertToVolumeKt {
	public static final fun imperialMolarVolumeTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarVolumeTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarVolumeTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarVolumeTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarVolumeTimesAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertFromAmountOfSubstanceAndVolumeKt {
	public static final fun molarityFromAmountOfSubstanceAndVolume (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarityFromAmountOfSubstanceAndVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertFromDensityAndMolalityKt {
	public static final fun molarityFromDensityAndMolality (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarityFromDensityAndMolalityDefault (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertFromDensityAndMolarMassKt {
	public static final fun molarityFromDensityAndMolarMass (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarityFromDensityAndMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertFromMolalityAndSpecificVolumeKt {
	public static final fun molarityFromMolalityAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarityFromMolalityAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertFromMolarVolumeKt {
	public static final fun molarityFromInvertedMolarVolume (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun molarityFromInvertedMolarVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Molarity;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertToAmountOfSubstanceKt {
	public static final fun molarityTimesVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertToDensityKt {
	public static final fun imperialMolarityDivImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarityDivUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarityDivUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarityTimesImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarityTimesUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMolarityTimesUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarityDivMetricMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarityTimesMetricMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarityDivImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarityDivUKImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarityTimesImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarityTimesUKImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarityDivImperialMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarityDivUSCustomaryMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarityTimesImperialMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarityTimesUSCustomaryMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertToMolalityKt {
	public static final fun molarityDivDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityDivMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityTimesMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityTimesSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/molarity/ConvertToMolarVolumeKt {
	public static final fun imperialMolarityMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMolarityMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun molarityMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMolarityMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMolarityMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertFromDynamicViscosityAndAreaKt {
	public static final fun momentumFromDynamicViscosityAndArea (Lcom/splendo/kaluga/scientific/unit/Momentum;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun momentumFromDynamicViscosityAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Momentum;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertFromForceAndTimeKt {
	public static final fun momentumFromForceAndTime (Lcom/splendo/kaluga/scientific/unit/Momentum;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun momentumFromForceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Momentum;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertFromMassAndSpeedKt {
	public static final fun momentumFromMassAndSpeed (Lcom/splendo/kaluga/scientific/unit/Momentum;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun momentumFromMassAndSpeedDefault (Lcom/splendo/kaluga/scientific/unit/Momentum;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertToAreaKt {
	public static final fun imperialMomentumDivImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMomentumDivUKImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMomentumDivUSCustomaryDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMomentumDivMetricDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun momentumDivDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivUKImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivImperialDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivUSCustomaryDynamicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertToDynamicViscosityKt {
	public static final fun imperialMomentumDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMomentumDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun momentumDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertToForceKt {
	public static final fun imperialMomentumDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMomentumDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun momentumDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertToSpeedKt {
	public static final fun imperialMomentumDivImperialMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMomentumDivUKImperialMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialMomentumDivUSCustomaryMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMomentumDivMetricMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun momentumDivMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivImperialMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivUKImperialMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivImperialMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivUSCustomaryMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/momentum/ConvertToWeightKt {
	public static final fun imperialMomentumDivImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricMomentumDivMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun momentumDivSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialMomentumDivImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryMomentumDivImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertFromEnergyAndTimeKt {
	public static final fun powerFromEnergyAndTime (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun powerFromEnergyAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertFromForceAndSpeedKt {
	public static final fun powerFromForceAndSpeed (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun powerFromForceAndSpeedDefault (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertFromTemperatureAndThermalResistanceKt {
	public static final fun powerFromTemperatureAndThermalResistance (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun powerFromTemperatureAndThermalResistanceDefault (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertFromVoltageAndElectricCurrentKt {
	public static final fun powerFromVoltageAndCurrent (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun powerFromVoltageAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/Power;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertToElectricCurrentKt {
	public static final fun ergSecondDivAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerDivVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertToEnergyKt {
	public static final fun britishThermalUnitPerHourTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitPerMinuteTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitPerSecondTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun centiwattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun decawattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun deciwattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergPerSecondTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gigawattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hectowattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun horsepowerTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPowerTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForcePerMinuteTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForcePerSecondTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilowattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun megawattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricPowerTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun microwattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun milliwattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun nanowattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun wattTimesHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertToForceKt {
	public static final fun ergPerSecondDivMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPowerDivImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerDivImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricPowerDivMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerDivSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertToSpeedKt {
	public static final fun britishThermalUnitPerHourDivPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitPerMinuteDivPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun britishThermalUnitPerSecondDivPoundForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergPerSecondDivDyne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergPerSecondDivDyneMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForcePerMinuteDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun footPoundForcePerSecondDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPowerDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPowerDivUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPowerDivUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForcePerMinuteDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun inchPoundForcePerSecondDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerDivImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerDivUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerDivUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricPowerDivMetricForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerDivForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertToTemperatureKt {
	public static final fun imperialPowerTimesUKImperialThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPowerTimesUSCustomaryThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerTimesMetricThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerTimesUKImperialThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndImperialPowerTimesUSCustomaryThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricPowerTimesMetricThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerTimesMetricAndUKImperialThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerTimesThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/power/ConvertToVoltageKt {
	public static final fun ergSecondDivAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ergSecondDivBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun powerDivCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/pressure/ConvertFromDynamicViscosityAndTimeKt {
	public static final fun pressureFromDynamicViscosityAndTime (Lcom/splendo/kaluga/scientific/unit/Pressure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun pressureFromDynamicViscosityAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Pressure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/pressure/ConvertFromEnergyAndVolumeKt {
	public static final fun pressureFromEnergyAndVolume (Lcom/splendo/kaluga/scientific/unit/Pressure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun pressureFromEnergyAndVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Pressure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/pressure/ConvertFromForceAndAreaKt {
	public static final fun pressureFromForceAndArea (Lcom/splendo/kaluga/scientific/unit/Pressure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun pressureFromForceAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Pressure;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/pressure/ConvertToDynamicViscosityKt {
	public static final fun imperialPressureTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricPressureTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun pressureTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialPressureTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryPressureTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/pressure/ConvertToEnergyKt {
	public static final fun baryeMultipleTimesCubicCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun baryeTimesCubicCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPressureTimesImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPressureTimesUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPressureTimesUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonSquareInchTimesCubicInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilopoundSquareInchTimesCubicInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipSquareInchTimesCubicInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceSquareInchTimesCubicInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundSquareFootTimesCubicFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundSquareInchTimesCubicInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun pressureTimesVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialPressureTimesImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialPressureTimesUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryPressureTimesImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryPressureTimesUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonSquareInchTimesCubicInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/pressure/ConvertToForceKt {
	public static final fun baryeMultipleTimesSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun baryeTimesSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialPressureTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonSquareFeetTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonSquareInchTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipSquareFeetTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kipSquareInchTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceSquareInchTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun pressureTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialPressureTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryPressureTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonSquareFeetTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonSquareInchTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/radioactivity/ConvertFromAmountOfSubstanceAndTimeKt {
	public static final fun radioactivityFromSubstanceAndHalfLife (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun radioactivityFromSubstanceAndHalfLifeDefault (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/radioactivity/ConvertFromTimeKt {
	public static final fun radioactivity (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun radioactivity (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun radioactivityFromInvertedTime (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun radioactivityFromInvertedTimeDefault (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/radioactivity/ConvertToDecimalKt {
	public static final fun radioactivityTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/converter/solidAngle/ConvertFromIlluminanceAndLuminanceKt {
	public static final fun solidAngleFromIlluminanceAndLuminance (Lcom/splendo/kaluga/scientific/unit/SolidAngle;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun solidAngleFromIlluminanceAndLuminanceDefault (Lcom/splendo/kaluga/scientific/unit/SolidAngle;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/solidAngle/ConvertFromLuminousFluxAndIntensityKt {
	public static final fun solidAngleFromLuminousFluxAndIntensity (Lcom/splendo/kaluga/scientific/unit/SolidAngle;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun solidAngleFromLuminousFluxAndIntensityDefault (Lcom/splendo/kaluga/scientific/unit/SolidAngle;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/solidAngle/ConvertToIlluminanceKt {
	public static final fun solidAngleTimesImperialLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun solidAngleTimesLambert (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun solidAngleTimesLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun solidAngleTimesMetricLuminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun solidAngleTimesStilb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/solidAngle/ConvertToLuminousFluxKt {
	public static final fun solidAngleTimesLuminousIntensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromEnergyAndWeightKt {
	public static final fun specificEnergyFromEnergyAndWeight (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromEnergyAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromIonizingRadiationAbsorbedDoseKt {
	public static final fun specificEnergyFromAbsorbedDose (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromAbsorbedDoseDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromIonizingRadiationEquivalentDoseKt {
	public static final fun specificEnergyFromEquivalentDose (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromEquivalentDoseDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromKinematicViscosityAndTimeKt {
	public static final fun specificEnergyFromKinematicViscosityAndTime (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromKinematicViscosityAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromMolarEnergyAndMolalityKt {
	public static final fun specificEnergyFromMolarEnergyAndMolality (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromMolarEnergyAndMolalityDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromMolarEnergyAndMolarMassKt {
	public static final fun specificEnergyFromMolarEnergyAndMolarMass (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromMolarEnergyAndMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertFromSpecificHeatCapacityAndTemperatureKt {
	public static final fun specificEnergyFromSpecificHeatCapacityAndTemperature (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificEnergyFromSpecificHeatCapacityAndTemperatureDefault (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToEnergyKt {
	public static final fun imperialSpecificEnergyTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificEnergyTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificEnergyTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyTimesMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToIonizingRadiationAbsorbedDoseKt {
	public static final fun asAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToIonizingRadiationEquivalentDoseKt {
	public static final fun asEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToKinematicViscosityKt {
	public static final fun imperialSpecificEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToMolalityKt {
	public static final fun imperialSpecificEnergyDivMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyDivMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyDivMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyDivMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyDivMolarEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToMolarEnergyKt {
	public static final fun imperialSpecificEnergyDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificEnergyTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToSpecificHeatCapacityKt {
	public static final fun imperialSpecificEnergyDivMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificEnergyDivUSCustomaryTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyDivMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyDivTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyDivMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyDivUSCustomaryTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificEnergy/ConvertToTemperatureKt {
	public static final fun imperialSpecificEnergyDivUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificEnergyDivUSCustomarySpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificEnergyDivMetricSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificEnergyDivTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificEnergyDivUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificEnergyDivUSCustomarySpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificHeatCapacity/ConvertFromHeatCapacityAndWeightKt {
	public static final fun specificHeatCapacityFromHeatCapacityAndWeight (Lcom/splendo/kaluga/scientific/unit/SpecificHeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificHeatCapacityFromHeatCapacityAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/SpecificHeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificHeatCapacity/ConvertFromSpecificEnergyAndTemperatureKt {
	public static final fun specificHeatCapacityFromSpecificEnergyAndTemperature (Lcom/splendo/kaluga/scientific/unit/SpecificHeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificHeatCapacityFromSpecificEnergyAndTemperatureDefault (Lcom/splendo/kaluga/scientific/unit/SpecificHeatCapacity;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificHeatCapacity/ConvertToHeatCapacityKt {
	public static final fun metricSpecificHeatCapacityTimesMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificHeatCapacityTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificHeatCapacityTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificHeatCapacityTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificHeatCapacityTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificHeatCapacityTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificHeatCapacity/ConvertToSpecificEnergyKt {
	public static final fun heatCapacityTimesTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificHeatCapacityTimesMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificHeatCapacityTimesMetricAndUKImperialTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificHeatCapacityTimesUSCustomaryTemperature (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromAreaAndLinearMassDensityKt {
	public static final fun specificVolumeFromAreaAndLinearMassDensity (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromAreaAndLinearMassDensityDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromDensityKt {
	public static final fun specificVolumeFromInvertedDensity (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromInvertedDensityDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromLengthAndAreaDensityKt {
	public static final fun specificVolumeFromLengthAndAreaDensity (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromLengthAndAreaDensityDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromMolalityAndMolarVolumeKt {
	public static final fun specificVolumeFromMolalityAndMolarVolume (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromMolalityAndMolarVolumeDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromMolalityAndMolarityKt {
	public static final fun specificVolumeFromMolalityAndMolarity (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromMolalityAndMolarityDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromMolarVolumeAndMolarMassKt {
	public static final fun specificVolumeFromMolarVolumeAndMolarMass (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromMolarVolumeAndMolarMassDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertFromVolumeAndWeightKt {
	public static final fun specificVolumeFromVolumeAndWeight (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun specificVolumeFromVolumeAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertToAreaKt {
	public static final fun imperialSpecificVolumeTimesImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesUKImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesUSCustomaryLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeTimesMetricLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeTimesLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesUKImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesUSCustomaryLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertToDensityKt {
	public static final fun imperialSpecificVolumeDensity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeDensity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeDensity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeDensity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeDensity (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertToLengthKt {
	public static final fun imperialSpecificVolumeTimesImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeTimesMetricAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeTimesAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertToMolalityKt {
	public static final fun imperialSpecificVolumeDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertToMolarVolumeKt {
	public static final fun imperialSpecificVolumeDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeDivMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/specificVolume/ConvertToVolumeKt {
	public static final fun imperialSpecificVolumeTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpecificVolumeTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpecificVolumeTimesMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun specificVolumeTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSpecificVolumeTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySpecificVolumeTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertFromAccelerationAndTimeKt {
	public static final fun speedFromAccelerationAndTime (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun speedFromAccelerationAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertFromLengthAndTimeKt {
	public static final fun speedFromDistanceAndTime (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun speedFromDistanceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertFromMomentumAndWeightKt {
	public static final fun speedFromMomentumAndMass (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun speedFromMomentumAndMassDefault (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertFromPowerAndForceKt {
	public static final fun speedFromPowerAndForce (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun speedFromPowerAndForceDefault (Lcom/splendo/kaluga/scientific/unit/Speed;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertToAccelerationKt {
	public static final fun imperialSpeedDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpeedDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun speedDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertToLengthKt {
	public static final fun imperialSpeedTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpeedTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun speedTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertToMomentumKt {
	public static final fun imperialSpeedTimesImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpeedTimesUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpeedTimesUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpeedTimesMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun speedTimesWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertToPowerKt {
	public static final fun imperialSpeedTimesImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpeedTimesUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSpeedTimesUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpeedTimesDyne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSpeedTimesDyneMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun speedTimesMetricForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/speed/ConvertToTimeKt {
	public static final fun speedDivAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/surfaceTension/ConvertFromEnergyAndAreaKt {
	public static final fun surfaceTensionFromEnergyAndArea (Lcom/splendo/kaluga/scientific/unit/SurfaceTension;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun surfaceTensionFromEnergyAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/SurfaceTension;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/surfaceTension/ConvertFromForceAndLengthKt {
	public static final fun surfaceTensionFromForceAndLength (Lcom/splendo/kaluga/scientific/unit/SurfaceTension;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun surfaceTensionFromForceAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/SurfaceTension;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/surfaceTension/ConvertToEnergyKt {
	public static final fun imperialSurfaceTensionTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialSurfaceTensionTimesSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSurfaceTensionTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSurfaceTensionTimesSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun surfaceTensionTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSurfaceTensionTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSurfaceTensionTimesSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySurfaceTensionTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySurfaceTensionTimesSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/surfaceTension/ConvertToForceKt {
	public static final fun imperialSurfaceTensionTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricSurfaceTensionTimesMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun surfaceTensionTimesLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialSurfaceTensionTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomarySurfaceTensionTimesImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertDeltaKt {
	public static final fun deltaValue (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun deltaValue (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertFromEnergyAndHeatCapacityKt {
	public static final fun temperatureFromEnergyAndHeatCapacity (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun temperatureFromEnergyAndHeatCapacityDefault (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertFromSpecificEnergyAndSpecificHeatCapacityKt {
	public static final fun temperatureFromSpecificEnergyAndSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun temperatureFromSpecificEnergyAndSpecificHeatCapacityDefault (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertFromThermalResistanceAndPowerKt {
	public static final fun temperatureFromThermalResistanceAndPower (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun temperatureFromThermalResistanceAndPowerDefault (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertToEnergyKt {
	public static final fun metricAndUKImperialTemperatureTimesMetricAndUKImperialHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureTimesMetricHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureTimesUKImperialHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun temperatureTimesHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryTemperatureTimesUSCustomaryHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertToPowerKt {
	public static final fun metricAndUKImperialTemperatureDivMetricAndUKImperialThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureDivMetricThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureDivUKImperialThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun temperatureDivThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryTemperatureDivUSCustomaryThermalResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertToSpecificEnergyKt {
	public static final fun metricAndUKImperialTemperatureTimesMetricSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureTimesUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun temperatureTimesHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryTemperatureTimesUSCustomarySpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/temperature/ConvertToThermalResistanceKt {
	public static final fun metricAndUKImperialTemperatureDivImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureDivMetricAndImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricAndUKImperialTemperatureDivMetricPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun temperatureDivPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryTemperatureDivImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryTemperatureDivMetricAndImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/thermalResistance/ConvertFromTemperatureAndPowerKt {
	public static final fun thermalResistanceFromTemperatureAndPower (Lcom/splendo/kaluga/scientific/unit/ThermalResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun thermalResistanceFromTemperatureAndPowerDefault (Lcom/splendo/kaluga/scientific/unit/ThermalResistance;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/thermalResistance/ConvertToTemperatureKt {
	public static final fun metricAndUKImperialThermalResistanceTimesPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricThermalResistanceTimesMetricAndImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricThermalResistanceTimesMetricPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun thermalResistanceTimesPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialThermalResistanceTimesImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialThermalResistanceTimesMetricAndImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryThermalResistanceTimesImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryThermalResistanceTimesMetricAndImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromAccelerationAndJoltKt {
	public static final fun timeFromAccelerationAndJolt (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromAccelerationAndJoltDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromActionAndEnergyKt {
	public static final fun timeFromActionAndEnergy (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromActionAndEnergyDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromAmountOfSubstanceAndCatalysticActivityKt {
	public static final fun timeFromAmountOfSubstanceAndCatalysticActivity (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromAmountOfSubstanceAndCatalysticActivityDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromAngleAndAngularVelocityKt {
	public static final fun timeFromAngleAndAngularVelocity (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromAngleAndAngularVelocityDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromAngularVelocityAndAccelerationKt {
	public static final fun timeFromAngularAccelerationAndVelocity (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromAngularAccelerationAndVelocityDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromChargeAndCurrentKt {
	public static final fun timeFromChargeAndCurrent (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromChargeAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromDynamicViscosityAndPressureKt {
	public static final fun timeFromDynamicViscosityAndPressure (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromDynamicViscosityAndPressureDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromElectricCapacitanceAndResistanceKt {
	public static final fun timeFromCapacitanceAndResistance (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromCapacitanceAndResistanceDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromElectricInductanceAndResistanceKt {
	public static final fun timeFromInductanceAndResistance (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromInductanceAndResistanceDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromEnergyAndPowerKt {
	public static final fun timeFromEnergyAndPower (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromEnergyAndPowerDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromForceAndYankKt {
	public static final fun timeFromForceAndYank (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromForceAndYankDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromFrequencyKt {
	public static final fun time (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun time (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromInvertedFrequency (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromInvertedFrequencyDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromKinematicViscosityAndAreaKt {
	public static final fun timeFromKinematicViscosityAndArea (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromKinematicViscosityAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromKinematicViscosityAndSpecificEnergyKt {
	public static final fun timeFromKinematicViscosityAndSpecificEnergy (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromKinematicViscosityAndSpecificEnergyDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromLengthAndSpeedKt {
	public static final fun timeFromDistanceAndSpeed (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromDistanceAndSpeedDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromLuminousEnergyAndLuminousFluxKt {
	public static final fun timeFromLuminousEnergyAndFlux (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromLuminousEnergyAndFluxDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromLuminousExposureAndIlluminanceKt {
	public static final fun timeFromLuminousExposureAndIlluminance (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromLuminousExposureAndIlluminanceDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromMagneticFluxAndVoltageKt {
	public static final fun timeFromFluxAndVoltage (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromFluxAndVoltageDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromRadioactivityKt {
	public static final fun time (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun time (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromInvertedRadioactivity (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromInvertedRadioactivityDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromSpeedAndAccelerationKt {
	public static final fun timeFromSpeedAndAcceleration (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromSpeedAndAccelerationDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertFromWeightAndMassFlowRateKt {
	public static final fun timeFromWeightAndMassFlowRate (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeFromWeightAndMassFlowRateDefault (Lcom/splendo/kaluga/scientific/unit/Time;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToAccelerationKt {
	public static final fun timeTimesImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricAndImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToActionKt {
	public static final fun timeTimesEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesImperialEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricAndImperialEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToAmountOfSubstanceKt {
	public static final fun timeTimesCatalysticActivity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToAngleKt {
	public static final fun timeTimesAngularVelocity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToAngularVelocityKt {
	public static final fun timeTimesAngularAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToAreaKt {
	public static final fun timeTimesImperialKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricKinematicViscosity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToDecimalKt {
	public static final fun timeTimesFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun timeTimesRadioactivity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToDynamicViscosityKt {
	public static final fun timeTimesImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToElectricCapacitanceKt {
	public static final fun timeDivAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeDivResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToElectricChargeKt {
	public static final fun timeTimesAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToElectricInductanceKt {
	public static final fun timeTimesAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToElectricResistanceKt {
	public static final fun timeDivAbfarad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeDivCapacitance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToEnergyKt {
	public static final fun hourTimesCentiwatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesDecawatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesDeciwatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesGigawatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesHectowatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesHorsepower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesKilowatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesMegawatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesMicrowatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesMilliwatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesNanowatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun hourTimesWatt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesBritishThermalUnitPerHour (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesBritishThermalUnitPerMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesBritishThermalUnitPerSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesErgPerSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesImperialPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesInchPoundForcePerMinute (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesInchPoundForcePerSecond (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesPower (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToForceKt {
	public static final fun timeTimesImperialYank (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricYank (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUKImperialYank (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUSCustomaryYank (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesYank (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToFrequencyKt {
	public static final fun frequency (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun minuteFrequency (Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToKinematicViscosityKt {
	public static final fun timeTimesImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUkImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUsCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToLengthKt {
	public static final fun timeTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeTimesMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun timeTimesSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/ScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToLuminousEnergyKt {
	public static final fun timeTimesLuminousFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToLuminousExposureKt {
	public static final fun timeTimesIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesImperialIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricIlluminance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToMagneticFluxKt {
	public static final fun timeTimesAbvolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesVoltage (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToMomentumKt {
	public static final fun timeTimesDyne (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesDyneMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesGrainForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesGramForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesImperialTonForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMilligramForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesOunceForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesPoundal (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesTonneForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUKImperialForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUSCustomaryForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUsTonForce (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToSpeedKt {
	public static final fun timeTimesAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToVolumeKt {
	public static final fun timeTimesImperialVolumetricFlow (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricVolumetricFlow (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUKImperialVolumetricFlow (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUSCustomaryVolumetricFlow (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesVolumetricFlow (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/time/ConvertToWeightKt {
	public static final fun timeTimesImperialMassFlowRate (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMassFlowRate (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesMetricMassFlowRate (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeTimesUSCustomaryMassFlowRate (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun timeUKImperialMassFlowRate (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertFromElectricChargeAndCapacitanceKt {
	public static final fun voltageFromChargeAndCapacitance (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun voltageFromChargeAndCapacitanceDefault (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertFromElectricCurrentAndConductanceKt {
	public static final fun voltageFromCurrentAndConductance (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun voltageFromCurrentAndConductanceDefault (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertFromElectricCurrentAndResistanceKt {
	public static final fun voltageFromCurrentAndResistance (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun voltageFromCurrentAndResistanceDefault (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertFromEnergyAndElectricChargeKt {
	public static final fun voltageFromEnergyAndCharge (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun voltageFromEnergyAndChargeDefault (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertFromMagneticFluxAndTimeKt {
	public static final fun voltageFromFluxAndTime (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun voltageFromFluxAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertFromPowerAndElectricCurrentKt {
	public static final fun voltageFromPowerAndCurrent (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun voltageFromPowerAndCurrentDefault (Lcom/splendo/kaluga/scientific/unit/Voltage;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertToElectricChargeKt {
	public static final fun abvoltTimesAbfarad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageTimesCapacitance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertToElectricCurrentKt {
	public static final fun abvoltDivAbohm (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abvoltTimesAbsiemens (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageDivResistance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageTimesConductance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertToElectricResistanceKt {
	public static final fun abvoltDivAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abvoltDivBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageDivCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertToEnergyKt {
	public static final fun abvoltTimesAbcoulomb (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageTimesCharge (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertToMagneticFluxKt {
	public static final fun abvoltTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/voltage/ConvertToPowerKt {
	public static final fun abvoltTimesAbampere (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun abvoltTimesBiot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun voltageTimesCurrent (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromAmountOfSubstanceAndMolarityKt {
	public static final fun volumeFromAmountOfSubstanceAndMolarity (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromAmountOfSubstanceAndMolarityDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromAreaAndLengthKt {
	public static final fun volumeFromAreaAndHeight (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromAreaAndHeightDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeFromLengthWidthAndHeight (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromLengthWidthAndHeightDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromEnergyAndPressureKt {
	public static final fun volumeFromEnergyAndPressure (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromEnergyAndPressureDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromMolarVolumeAndAmountOfSubstanceKt {
	public static final fun volumeFromMolarVolumeAndAmountOfSubstance (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromMolarVolumeAndAmountOfSubstanceDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromSpecificVolumeAndWeightKt {
	public static final fun volumeFromSpecificVolumeAndWeight (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromSpecificVolumeAndWeightDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromVolumetricFlowAndTimeKt {
	public static final fun volumeFromVolumetricFlowAndTime (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromVolumetricFlowAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertFromWeightAndDensityKt {
	public static final fun volumeFromWeightAndDensity (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumeFromWeightAndDensityDefault (Lcom/splendo/kaluga/scientific/unit/Volume;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToAmountOfSubstanceKt {
	public static final fun volumeDivMolarVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeTimesMolarity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToAreaKt {
	public static final fun acreFootDivFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun acreInchDivInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicCentimeterDivCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicDecameterDivDecameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicDecimeterDivDecimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicFootDivFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicGigameterDivGigameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicHectometerDivHectometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchDivInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicKilometerDivKilometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMegameterDivMegameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMeterDivMeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMicrometerDivMicrometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMileDivMile (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMillimeterDivMillimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicNanometerDivNanometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicYardDivYard (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToEnergyKt {
	public static final fun cubicCentimeterTimesBarye (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicCentimeterTimesBaryeMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicFootTimesPoundSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchTimesImperialTonSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchTimesKilopoundSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchTimesKipSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchTimesOunceSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchTimesPoundSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchTimesUSTonSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeTimesImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeTimesUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeTimesUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeTimesImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeTimesUKImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeTimesImperialPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeTimesUSCustomaryPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeTimesPressure (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToLengthKt {
	public static final fun acreFootDivAcre (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun acreInchDivAcre (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicCentimeterDivSquareCentimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicDecameterDivSquareDecameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicDecimeterDivSquareDecimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicFootDivSquareFoot (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicGigameterDivSquareGigameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicHectometerDivSquareHectometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicInchDivSquareInch (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicKilometerDivSquareKilometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMegameterDivSquareMegameter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMeterDivSquareMeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMicrometerDivSquareMicrometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMileDivSquareMile (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicMillimeterDivSquareMillimeter (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicNanometerDivSquareNanometer (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun cubicYardDivSquareYard (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToMolarVolumeKt {
	public static final fun imperialVolumeDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToSpecificVolumeKt {
	public static final fun imperialVolumeDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeDivWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToVolumetricFlowKt {
	public static final fun imperialVolumeDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volume/ConvertToWeightKt {
	public static final fun imperialVolumeDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeDivUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeDivUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumeTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeDivMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumeTimesMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeDivUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumeTimesUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeDivUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeTimesImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumeTimesUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeDivSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumeTimesDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlow/ConvertFromVolumeAndTimeKt {
	public static final fun volumetricFlowFromVolumeAndTime (Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumetricFlowFromVolumeAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlow/ConvertFromVolumetricFluxAndAreaKt {
	public static final fun volumetricFlowFromVolumetricFluxAndArea (Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumetricFlowFromVolumetricFluxAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlow/ConvertToAreaKt {
	public static final fun imperialVolumetricFlowDivImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumetricFlowDivUKImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialVolumetricFlowDivUSCustomaryVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumetricFlowDivMetricVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumetricFlowDivImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumetricFlowDivUKImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumetricFlowDivImperialVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumetricFlowDivUSCustomaryVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumetricFlowDivVolumetricFlux (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlow/ConvertToVolumeKt {
	public static final fun imperialVolumetricFlowTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumetricFlowTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumetricFlowTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumetricFlowTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumetricFlowTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlow/ConvertToVolumetricFluxKt {
	public static final fun imperialVolumetricFlowDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumetricFlowDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumetricFlowDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumetricFlowDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumetricFlowDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlux/ConvertFromVolumetricFlowAndAreaKt {
	public static final fun volumetricFluxFromVolumetricFlowAndArea (Lcom/splendo/kaluga/scientific/unit/VolumetricFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun volumetricFluxFromVolumetricFlowAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/VolumetricFlux;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/volumetricFlux/ConvertToVolumetricFlowKt {
	public static final fun imperialVolumetricFluxTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricVolumetricFluxTimesMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialVolumetricFluxTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryVolumetricFluxTimesImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun volumetricFluxTimesArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromAmountOfSubstanceAndMolalityKt {
	public static final fun weightFromAmountOfSubstanceAndMolality (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromAmountOfSubstanceAndMolalityDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromAreaDensityAndAreaKt {
	public static final fun weightFromAreaDensityAndArea (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromAreaDensityAndAreaDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromDensityAndVolumeKt {
	public static final fun weightFromDensityAndVolume (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromDensityAndVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromEnergyAndIonizingRadiationAbsorbedDoseKt {
	public static final fun weightFromEnergyAndAbsorbedDose (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromEnergyAndAbsorbedDoseDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromEnergyAndIonizingRadiationEquivalentDoseKt {
	public static final fun weightFromEnergyAndEquivalentDose (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromEnergyAndEquivalentDoseDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromEnergyAndSpecificEnergyKt {
	public static final fun weightFromEnergyAndSpecificEnergy (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromEnergyAndSpecificEnergyDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromForceAndAccelerationKt {
	public static final fun massFromForceAndAcceleration (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun massFromForceAndAccelerationDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromHeatCapacityAndSpecificHeatCapacityKt {
	public static final fun weightFromHeatCapacityAndSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromHeatCapacityAndSpecificHeatCapacityDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromLinearMassDensityAndLengthKt {
	public static final fun weightFromLinearMassDensityAndLength (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromLinearMassDensityAndLengthDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromMassFlowRateAndTimeKt {
	public static final fun weightFromMassFlowRateAndTime (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromMassFlowRateAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromMolarMassAndAmountOfSubstanceKt {
	public static final fun weightFromMolarMassAndAmountOfSubstance (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromMolarMassAndAmountOfSubstanceDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromMomentumAndSpeedKt {
	public static final fun massFromMomentumAndSpeed (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun massFromMomentumAndSpeedDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromVolumeAndSpecificVolumeKt {
	public static final fun weightFromVolumeAndSpecificVolume (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun weightFromVolumeAndSpecificVolumeDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertFromYankAndJoltKt {
	public static final fun massFromYankAndJolt (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun massFromYankAndJoltDefault (Lcom/splendo/kaluga/scientific/unit/Weight;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToAmountOfSubstanceKt {
	public static final fun weightDivMolarMass (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesMolality (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToAreaDensityKt {
	public static final fun imperialWeightDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivMetricArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivImperialArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivArea (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToAreaKt {
	public static final fun imperialWeightDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivMetricAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivUKImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivImperialAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivUSCustomaryAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivAreaDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToDensityKt {
	public static final fun imperialWeightDivImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivMetricVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivUKImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivImperialVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivUSCustomaryVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToEnergyKt {
	public static final fun gramTimesRad (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramTimesRadMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramTimesRoentgenEquivalentMan (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramTimesRoentgenEquivalentManMultiple (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesUKImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesUSCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightTimesMetricSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesUKImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesImperialSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesUSCustomarySpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesAbsorbedDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesEquivalentDose (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesSpecificEnergy (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToForceKt {
	public static final fun grainTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun grainTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramTimesMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun gramTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialTonTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun kilogramTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightTimesMetricAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun milligramTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ounceTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun poundTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun tonneTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonTimesImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usTonTimesMetricAndImperialAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesAcceleration (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToHeatCapacityKt {
	public static final fun imperialWeightTimesUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesUSCustomarySpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightTimesMetricSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightUKImperialSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesUSCustomarySpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesSpecificHeatCapacity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToLengthKt {
	public static final fun imperialWeightDivImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUKImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUSCustomaryLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivMetricLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivUKImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivImperialLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivUSCustomaryLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivLinearMassDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToLinearMassDensityKt {
	public static final fun imperialWeightDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivMetricLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivImperialLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivLength (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToMassFlowRateKt {
	public static final fun imperialWeightDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToMolarMassKt {
	public static final fun imperialWeightDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivAmountOfSubstance (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToMomentumKt {
	public static final fun imperialWeightTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightTimesMetricSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesImperialSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesSpeed (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToTimeKt {
	public static final fun weightDivMassFlowRate (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToVolumeKt {
	public static final fun imperialWeightDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialWeightTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightDivMetricDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightTimesMetricSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightDivUKImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesUKImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivImperialDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightDivUSCustomaryDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesImperialSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesUSCustomarySpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightDivDensity (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesSpecificVolume (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/weight/ConvertToYankKt {
	public static final fun imperialWeightTimesImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricWeightTimesMetricJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialWeightTimesImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryWeightTimesImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun weightTimesJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/yank/ConvertFromForceAndTimeKt {
	public static final fun yankFromForceAndTime (Lcom/splendo/kaluga/scientific/unit/Yank;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun yankFromForceAndTimeDefault (Lcom/splendo/kaluga/scientific/unit/Yank;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/yank/ConvertFromMassAndJoltKt {
	public static final fun yankFromMassAndJolt (Lcom/splendo/kaluga/scientific/unit/Yank;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/scientific/ScientificValue;
	public static final fun yankFromMassAndJoltDefault (Lcom/splendo/kaluga/scientific/unit/Yank;Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/yank/ConvertToForceKt {
	public static final fun imperialYankTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricYankTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialYankTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryYankTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun yankTimesTime (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/yank/ConvertToJoltKt {
	public static final fun imperialYankDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialYankDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun imperialYankDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricYankDivMetricWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialYankDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialYankDivUKImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryYankDivImperialWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryYankDivUSCustomaryWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun yankDivWeight (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/converter/yank/ConvertToWeightKt {
	public static final fun imperialYankDivImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun metricYankDivMetricJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun ukImperialYankDivImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun usCustomaryYankDivImperialJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun yankDivJolt (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/ScientificValue;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public final class com/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter : com/splendo/kaluga/scientific/formatter/ScientificValueFormatter {
	public static final field Companion Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter$Companion;
	public fun format (Lcom/splendo/kaluga/scientific/ScientificValue;)Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter$Builder {
	public static final field Companion Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter$Builder$Companion;
	public final fun build ()Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter;
	public final fun formatAs (Lcom/splendo/kaluga/scientific/PhysicalQuantity;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)V
	public final fun formatAs (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)V
	public final fun formatUsing (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function1;)V
	public final fun getDefaultValueFormatter ()Lcom/splendo/kaluga/base/text/NumberFormatter;
	public final fun setDefaultValueFormatter (Lcom/splendo/kaluga/base/text/NumberFormatter;)V
	public final fun useFormat (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function1;)V
	public final fun usesCustomSymbol (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Ljava/lang/String;)V
}

public final class com/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter$Builder$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/scientific/formatter/ScientificValueFormatter;
	public static synthetic fun build$default (Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter$Builder$Companion;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/formatter/ScientificValueFormatter;
}

public final class com/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter$Companion {
	public final fun getDefault ()Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter;
	public final fun with (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter;
}

public final class com/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter : com/splendo/kaluga/scientific/formatter/ScientificValueFormatter {
	public static final field Companion Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$Companion;
	public synthetic fun <init> (Ljava/util/Map;Ljava/lang/String;IDLcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;Ljava/util/Map;Ljava/util/Map;Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter;Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter;Lcom/splendo/kaluga/scientific/formatter/CommonScientificValueFormatter;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun format (Lcom/splendo/kaluga/scientific/ScientificValue;)Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$Builder {
	public final fun denominateBy (Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;Ljava/util/List;)V
	public final fun formatAs (Lcom/splendo/kaluga/scientific/PhysicalQuantity;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)V
	public final fun formatAs (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)V
	public final fun formatUsing (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lkotlin/jvm/functions/Function1;)V
	public final fun getDefaultUnitFormatter ()Lcom/splendo/kaluga/base/text/NumberFormatter;
	public final fun getDenominatorUnitFormatter ()Lcom/splendo/kaluga/base/text/NumberFormatter;
	public final fun getIncludeZeroValues ()Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public final fun getLastDenominatorUnitFormatter ()Lcom/splendo/kaluga/base/text/NumberFormatter;
	public final fun getRoundingPrecision ()D
	public final fun getScale-pVg5ArA ()I
	public final fun getSeparator ()Ljava/lang/String;
	public final fun setDefaultUnitFormatter (Lcom/splendo/kaluga/base/text/NumberFormatter;)V
	public final fun setDenominatorUnitFormatter (Lcom/splendo/kaluga/base/text/NumberFormatter;)V
	public final fun setIncludeZeroValues (Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;)V
	public final fun setLastDenominatorUnitFormatter (Lcom/splendo/kaluga/base/text/NumberFormatter;)V
	public final fun setRoundingPrecision (D)V
	public final fun setScale-WZ4Q5Ns (I)V
	public final fun setSeparator (Ljava/lang/String;)V
	public final fun usesCustomSymbol (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Ljava/lang/String;)V
}

public final class com/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$Companion {
	public final fun with (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter;
}

public final class com/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues : java/lang/Enum {
	public static final field ALL Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public static final field NONE Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public static final field ONLY_FIRST_ENDING Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public static final field ONLY_NON_ENDING Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public static final field ONLY_NON_ENDING_AND_FIRST_ENDING Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
	public static fun values ()[Lcom/splendo/kaluga/scientific/formatter/DenominatorScientificValueFormatter$IncludeZeroValues;
}

public abstract interface class com/splendo/kaluga/scientific/formatter/ScientificValueFormatter {
	public abstract fun format (Lcom/splendo/kaluga/scientific/ScientificValue;)Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/formatter/ScientificValueFormatterKt {
	public static final fun toString (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/formatter/ScientificValueFormatter;)Ljava/lang/String;
	public static synthetic fun toString$default (Lcom/splendo/kaluga/scientific/ScientificValue;Lcom/splendo/kaluga/scientific/formatter/ScientificValueFormatter;ILjava/lang/Object;)Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Abampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Abampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Abcoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Abcoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Abfarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Abfarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Abhenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Abhenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Abohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Abohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Absiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Absiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/AbstractScientificUnit : com/splendo/kaluga/scientific/unit/ScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/AbstractScientificUnit;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;)V
}

public final class com/splendo/kaluga/scientific/unit/AbstractScientificUnit$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Abvolt : com/splendo/kaluga/scientific/unit/Voltage {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Abvolt;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Acceleration : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Acceleration$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public abstract fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Acceleration;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Acceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AccelerationUnitKt {
	public static final fun getAccelerationUnits ()Ljava/util/Set;
	public static final fun getImperialAccelerationUnits ()Ljava/util/Set;
	public static final fun getImperialStandardGravityAcceleration ()Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun getMetricAccelerationUnits ()Ljava/util/Set;
	public static final fun getMetricAndImperialAccelerationUnits ()Ljava/util/Set;
	public static final fun getMetricStandardGravityAcceleration ()Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;
}

public final class com/splendo/kaluga/scientific/unit/Acre : com/splendo/kaluga/scientific/unit/ImperialArea {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Acre;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getACRES_IN_SQUARE_MILE ()D
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/AcreFoot : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/AcreFoot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/AcreInch : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/AcreInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Action : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Action$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Action;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Action;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Action;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Action$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ActionUnitKt {
	public static final fun getActionUnits ()Ljava/util/Set;
	public static final fun getImperialActionUnits ()Ljava/util/Set;
	public static final fun getMetricActionUnits ()Ljava/util/Set;
	public static final fun getMetricAndImperialActionUnits ()Ljava/util/Set;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialAction;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAction;
}

public abstract class com/splendo/kaluga/scientific/unit/AmountOfSubstance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/AmountOfSubstance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AmountOfSubstanceUnitKt {
	public static final fun getAmountOfSubstanceUnits ()Ljava/util/Set;
	public static final fun getAvogadroConstant ()Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/Ampere : com/splendo/kaluga/scientific/unit/ElectricCurrent, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Ampere;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/AmpereMultiple : com/splendo/kaluga/scientific/unit/ElectricCurrent, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/AmpereMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/AmpereMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/AmpereMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Angle : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Angle$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Angle;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Angle$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AngleUnitKt {
	public static final fun getAngleUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/AngularAcceleration : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/AngularAcceleration$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AngularVelocity;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getAngularVelocity ()Lcom/splendo/kaluga/scientific/unit/AngularVelocity;
	public final fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AngularAcceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/AngularAcceleration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/AngularAcceleration$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AngularAcceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AngularAccelerationKt {
	public static final fun getAngularAccelerationUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/AngularAcceleration;
}

public final class com/splendo/kaluga/scientific/unit/AngularVelocity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/AngularVelocity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/Angle;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/Angle;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/Angle;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/AngularVelocity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/AngularVelocity;Lcom/splendo/kaluga/scientific/unit/Angle;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/AngularVelocity;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getAngle ()Lcom/splendo/kaluga/scientific/unit/Angle;
	public final fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AngularVelocity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/AngularVelocity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/AngularVelocity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/AngularVelocity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/AngularVelocity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AngularVelocity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AngularVelocityUnitKt {
	public static final fun getAngularVelocityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/Angle;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/AngularVelocity;
}

public final class com/splendo/kaluga/scientific/unit/Apostilb : com/splendo/kaluga/scientific/unit/MetricLuminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Apostilb;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/ArcMinute : com/splendo/kaluga/scientific/unit/Angle {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ArcMinute;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/ArcSecond : com/splendo/kaluga/scientific/unit/Angle {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ArcSecond;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Area : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Area$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Area;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Area$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/AreaDensity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/AreaDensity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$AreaDensity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AreaDensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/AreaDensity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/AreaDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/AreaDensityUnitKt {
	public static final fun getAreaDensityUnits ()Ljava/util/Set;
	public static final fun getImperialAreaDensityUnits ()Ljava/util/Set;
	public static final fun getMetricAreaDensityUnits ()Ljava/util/Set;
	public static final fun getUKImperialAreaDensityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryAreaDensityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricArea;)Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;
}

public final class com/splendo/kaluga/scientific/unit/AreaUnitKt {
	public static final fun getAreaUnits ()Ljava/util/Set;
	public static final fun getImperialAreaUnits ()Ljava/util/Set;
	public static final fun getMetricAreaUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Atmosphere : com/splendo/kaluga/scientific/unit/MetricPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Atmosphere;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Bar : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Bar;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/BarMultiple : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/BarMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/BarMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/BarMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Barye : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Barye;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/BaryeMultiple : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/BaryeMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/BaryeMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/BaryeMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/BeatsPerMinute : com/splendo/kaluga/scientific/unit/Frequency {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/BeatsPerMinute;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Becquerel : com/splendo/kaluga/scientific/unit/Radioactivity, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Becquerel;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/BecquerelMultiple : com/splendo/kaluga/scientific/unit/Radioactivity, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/BecquerelMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/BecquerelMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/BecquerelMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Biot : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Biot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Bril : com/splendo/kaluga/scientific/unit/MetricLuminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Bril;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/BritishThermalUnit : com/splendo/kaluga/scientific/unit/ImperialEnergy, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/BritishThermalUnit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/BritishThermalUnit$Thermal : com/splendo/kaluga/scientific/unit/ImperialEnergy, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/BritishThermalUnit$Thermal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/BritishThermalUnitPerHour : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/BritishThermalUnitPerHour;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/BritishThermalUnitPerMinute : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/BritishThermalUnitPerMinute;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/BritishThermalUnitPerSecond : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/BritishThermalUnitPerSecond;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Calorie : com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy, com/splendo/kaluga/scientific/unit/CalorieUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Calorie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Calorie$IT : com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy, com/splendo/kaluga/scientific/unit/CalorieUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Calorie$IT;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/CalorieMultiple : com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CalorieMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/CalorieMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/CalorieMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/CalorieMultiple$IT : com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CalorieMultiple$IT$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/CalorieMultiple$IT;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/CalorieMultiple$IT$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/CalorieUnit : com/splendo/kaluga/scientific/unit/MetricBaseUnit {
}

public final class com/splendo/kaluga/scientific/unit/CalorieUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/CalorieUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/CalorieUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/Candela : com/splendo/kaluga/scientific/unit/LuminousIntensity, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Candela;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/CandelaMultiple : com/splendo/kaluga/scientific/unit/LuminousIntensity, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CandelaMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/CandelaMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/CandelaMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/CatalysticActivity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CatalysticActivity$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/CatalysticActivity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/CatalysticActivity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/CatalysticActivityUnitKt {
	public static final fun getCatalysticActivityUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Celsius : com/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Celsius;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centi : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/CentiGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CentiGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centibar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centibar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centibarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centibarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centibecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centibecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centicandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centicandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centicoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centicoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centicurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centicurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centidalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centidalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centidyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centidyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centielectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centielectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centierg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centierg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centifarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centifarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centig : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centig;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centigram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centigram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centigray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centigray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centihenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centihenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centihertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centihertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centijoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centijoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centikatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centikatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centilumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centilumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centilux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centilux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centimeter : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CentimeterOfWater : com/splendo/kaluga/scientific/unit/MetricPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CentimeterOfWater;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centimole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centimole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centinewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centinewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centinit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centinit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centipascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centipascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centirad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centirad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiradian : com/splendo/kaluga/scientific/unit/RadianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CentiroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CentiroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centisecond : com/splendo/kaluga/scientific/unit/SecondMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centisecond;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centisiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centisiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centisievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centisievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centisteradian : com/splendo/kaluga/scientific/unit/SteradianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centisteradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centitesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centitesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centitorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centitorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiturn : com/splendo/kaluga/scientific/unit/TurnMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiturn;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centivolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centivolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiwatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiwatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CentiwattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CentiwattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Centiweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Centiweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CombinedImperialAcceleration : com/splendo/kaluga/scientific/unit/ImperialAcceleration {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/CombinedImperialAcceleration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/CombinedImperialAcceleration;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/CombinedImperialAcceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/CombinedMetricAcceleration : com/splendo/kaluga/scientific/unit/MetricAcceleration {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/CombinedMetricAcceleration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/CombinedMetricAcceleration;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/CombinedMetricAcceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Coulomb : com/splendo/kaluga/scientific/unit/ElectricCharge, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Coulomb;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/CoulombMultiple : com/splendo/kaluga/scientific/unit/ElectricCharge, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CoulombMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/CoulombMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/CoulombMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/CubicCentimeter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicCentimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicDecameter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicDecameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicDecimeter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicDecimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicFoot : com/splendo/kaluga/scientific/unit/ImperialVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicFoot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicGigameter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicGigameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicHectometer : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicHectometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicInch : com/splendo/kaluga/scientific/unit/ImperialVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicInch;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicKilometer : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicKilometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicMegameter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicMegameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicMeter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicMeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicMicrometer : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicMicrometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicMile : com/splendo/kaluga/scientific/unit/ImperialVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicMile;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicMillimeter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicMillimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicNanometer : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicNanometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/CubicYard : com/splendo/kaluga/scientific/unit/ImperialVolume, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/CubicYard;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Curie : com/splendo/kaluga/scientific/unit/Radioactivity, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Curie;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/CurieMultiple : com/splendo/kaluga/scientific/unit/Radioactivity, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/CurieMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/CurieMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/CurieMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit : com/splendo/kaluga/scientific/unit/UndefinedScientificUnit {
	public abstract fun getCustomQuantity ()Ljava/lang/Object;
	public fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Custom;
	public synthetic fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$Imperial : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$Metric : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$MetricAndImperial : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$UKImperial : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit$USCustomary : com/splendo/kaluga/scientific/unit/CustomUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public final class com/splendo/kaluga/scientific/unit/Dalton : com/splendo/kaluga/scientific/unit/MetricWeight, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Dalton;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/DaltonMultiple : com/splendo/kaluga/scientific/unit/MetricWeight, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/DaltonMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/DaltonMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/DaltonMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Deca : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/DecaGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/DecaGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decabar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decabar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decabarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decabarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decabecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decabecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decacandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decacandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decacoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decacoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decacurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decacurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decadalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decadalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decadyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decadyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decafarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decafarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decag : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decag;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decagram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decagram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decagray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decagray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decahenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decahenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decahertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decahertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decajoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decajoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decakatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decakatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decalumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decalumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decalux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decalux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decameter : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decamole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decamole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decanewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decanewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decanit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decanit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decapascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decapascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decarad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DecaroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/DecaroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decasiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decasiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decasievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decasievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decatesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decatesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decatorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decatorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decavolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decavolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decawatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decawatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DecawattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/DecawattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decaweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decaweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deci : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/DeciGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/DeciGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decibar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decibar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decibarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decibarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decibecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decibecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decicandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decicandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decicoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decicoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decicurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decicurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decidalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decidalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decidyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decidyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decielectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decielectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decierg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decierg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decifarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decifarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decig : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decig;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decigram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decigram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decigray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decigray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decihenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decihenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decihertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decihertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decijoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decijoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decikatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decikatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decilumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decilumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decilux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decilux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decimeter : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decimole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decimole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decinewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decinewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decinit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decinit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decipascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decipascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decirad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decirad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciradian : com/splendo/kaluga/scientific/unit/RadianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DeciroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/DeciroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decisecond : com/splendo/kaluga/scientific/unit/SecondMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decisecond;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decisiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decisiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decisievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decisievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decisteradian : com/splendo/kaluga/scientific/unit/SteradianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decisteradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decitesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decitesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decitorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decitorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciturn : com/splendo/kaluga/scientific/unit/TurnMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciturn;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Decivolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Decivolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciwatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciwatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DeciwattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/DeciwattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Deciweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Deciweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Degree : com/splendo/kaluga/scientific/unit/Angle {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Degree;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Density : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Density$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Density;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Density;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Density;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Density$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/DensityUnitKt {
	public static final fun getDensityUnits ()Ljava/util/Set;
	public static final fun getImperialDensityUnits ()Ljava/util/Set;
	public static final fun getMetricDensityUnits ()Ljava/util/Set;
	public static final fun getUKImperialDensityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryDensityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/ImperialDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricVolume;)Lcom/splendo/kaluga/scientific/unit/MetricDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
}

public abstract class com/splendo/kaluga/scientific/unit/Dimensionless : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Dimensionless$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Dimensionless;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Dimensionless$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/DimensionlessUnitKt {
	public static final fun getConstant (Lcom/splendo/kaluga/scientific/unit/One;)Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun getDimensionlessUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit : com/splendo/kaluga/scientific/unit/UndefinedScientificUnit {
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public abstract fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Dividing;
	public synthetic fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary : com/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDenominator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getNumerator ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Dram : com/splendo/kaluga/scientific/unit/ImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Dram;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/DynamicViscosity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/DynamicViscosity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$DynamicViscosity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPressure ()Lcom/splendo/kaluga/scientific/unit/Pressure;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$DynamicViscosity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/DynamicViscosity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/DynamicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/DynamicViscosityUnitKt {
	public static final fun getDynamicViscosityUnits ()Ljava/util/Set;
	public static final fun getImperialDynamicViscosityUnits ()Ljava/util/Set;
	public static final fun getMetricDynamicViscosityUnits ()Ljava/util/Set;
	public static final fun getUKImperialDynamicViscosityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryDynamicViscosityUnits ()Ljava/util/Set;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/MetricPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;
}

public final class com/splendo/kaluga/scientific/unit/Dyne : com/splendo/kaluga/scientific/unit/MetricForce, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Dyne;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/DyneMultiple : com/splendo/kaluga/scientific/unit/MetricForce, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/DyneMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/DyneMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/DyneMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectricCapacitance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectricCapacitance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectricCapacitance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ElectricCapacitanceUnitKt {
	public static final fun getElectricCapacitanceUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectricCharge : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectricCharge$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectricCharge;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectricCharge$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ElectricChargeUnitKt {
	public static final fun getElectricChargeUnits ()Ljava/util/Set;
	public static final fun getElementaryCharge ()Lcom/splendo/kaluga/scientific/DefaultScientificValue;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectricConductance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectricConductance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectricConductance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectricConductance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ElectricConductanceUnitKt {
	public static final fun getElectricConductanceUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectricCurrent : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectricCurrent$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectricCurrent;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectricCurrent$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ElectricCurrentUnitKt {
	public static final fun getElectricCurrentUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectricInductance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectricInductance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectricInductance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectricInductance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ElectricInductanceUnitKt {
	public static final fun getElectricInductanceUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectricResistance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectricResistance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectricResistance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectricResistance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ElectricResistanceUnitKt {
	public static final fun getElectricResistanceUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Electronvolt : com/splendo/kaluga/scientific/unit/MetricEnergy, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Electronvolt;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/ElectronvoltMultiple : com/splendo/kaluga/scientific/unit/MetricEnergy, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ElectronvoltMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ElectronvoltMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ElectronvoltMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Energy : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Energy$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Energy;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Energy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/EnergyUnitKt {
	public static final fun getEnergyUnits ()Ljava/util/Set;
	public static final fun getImperial (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper;
	public static final fun getImperialEnergyUnits ()Ljava/util/Set;
	public static final fun getMetric (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper;
	public static final fun getMetricAndImperialEnergyUnits ()Ljava/util/Set;
	public static final fun getMetricEnergyUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Erg : com/splendo/kaluga/scientific/unit/MetricEnergy, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field ERG_IN_JOULE I
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Erg;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/ErgMultiple : com/splendo/kaluga/scientific/unit/MetricEnergy, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ErgMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ErgMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ErgMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ErgPerSecond : com/splendo/kaluga/scientific/unit/MetricPower, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ErgPerSecond;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Fahrenheit : com/splendo/kaluga/scientific/unit/USCustomaryTemperature {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Fahrenheit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Farad : com/splendo/kaluga/scientific/unit/ElectricCapacitance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Farad;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/FaradMultiple : com/splendo/kaluga/scientific/unit/ElectricCapacitance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/FaradMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/FaradMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/FaradMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Foot : com/splendo/kaluga/scientific/unit/ImperialLength {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Foot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootCandle : com/splendo/kaluga/scientific/unit/ImperialIlluminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootCandle;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootLambert : com/splendo/kaluga/scientific/unit/ImperialLuminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootLambert;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootOfWater : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootOfWater;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootPoundForce : com/splendo/kaluga/scientific/unit/ImperialEnergy {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootPoundForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootPoundForcePerMinute : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootPoundForcePerMinute;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootPoundForcePerSecond : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootPoundForcePerSecond;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/FootPoundal : com/splendo/kaluga/scientific/unit/ImperialEnergy {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/FootPoundal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Force : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Force$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Force;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Force$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ForceUnitKt {
	public static final fun getForceUnits ()Ljava/util/Set;
	public static final fun getImperialForceUnits ()Ljava/util/Set;
	public static final fun getMetricForceUnits ()Ljava/util/Set;
	public static final fun getUKImperialForceUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryForceUnits ()Ljava/util/Set;
	public static final fun getUkImperial (Lcom/splendo/kaluga/scientific/unit/ImperialForce;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper;
	public static final fun getUsCustomary (Lcom/splendo/kaluga/scientific/unit/ImperialForce;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper;
}

public abstract class com/splendo/kaluga/scientific/unit/Frequency : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Frequency$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Frequency;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Frequency$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/FrequencyUnitKt {
	public static final fun getFrequencyUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/GUnit : com/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/GUnit;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/GUnitMultiple : com/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/GUnitMultiple$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/Time;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/GUnitMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/GUnitMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Gal : com/splendo/kaluga/scientific/unit/MetricAcceleration, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gal;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/GalMultiple : com/splendo/kaluga/scientific/unit/MetricAcceleration, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/GalMultiple$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/Time;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/GalMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/GalMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Gauss : com/splendo/kaluga/scientific/unit/MagneticInduction {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gauss;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Giga : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/GigaGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/GigaGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigabar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigabar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigabarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigabarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigabecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigabecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigacandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigacandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigacoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigacoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigacurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigacurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigadalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigadalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigadyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigadyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigafarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigafarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigag : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigag;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigagram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigagram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigagray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigagray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigahenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigahenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigahertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigahertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigajoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigajoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigakatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigakatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigalumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigalumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigalux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigalux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigameter : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigamole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigamole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Giganewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Giganewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Giganit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Giganit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigapascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigapascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigarad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/GigaroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/GigaroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigasiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigasiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigasievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigasievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigatesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigatesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigatorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigatorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigavolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigavolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigawatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigawatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/GigawattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/GigawattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gigaweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gigaweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gradian : com/splendo/kaluga/scientific/unit/Angle {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gradian;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Grain : com/splendo/kaluga/scientific/unit/ImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Grain;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/GrainForce : com/splendo/kaluga/scientific/unit/ImperialForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/GrainForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Gram : com/splendo/kaluga/scientific/unit/MetricWeight, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gram;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/GramForce : com/splendo/kaluga/scientific/unit/MetricForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/GramForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/GramMultiple : com/splendo/kaluga/scientific/unit/MetricWeight, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/GramMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/GramMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/GramMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Gray : com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Gray;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/GrayMultiple : com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/GrayMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/GrayMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/GrayMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/HeatCapacity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/HeatCapacity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$HeatCapacity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$HeatCapacity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/HeatCapacity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/HeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/HeatCapacityUnitKt {
	public static final fun getHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getMetricAndUKImperialHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getMetricHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getUKImperialHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryHeatCapacityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;)Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;)Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
}

public final class com/splendo/kaluga/scientific/unit/Hectare : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectare;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hecto : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/HectoDalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/HectoDalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/HectoGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/HectoGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/HectoOhm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/HectoOhm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectoampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectoampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectobar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectobar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectobarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectobarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectobecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectobecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectocandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectocandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectocoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectocoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectocurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectocurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectodyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectodyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectoelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectoelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectoerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectoerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectofarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectofarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectog : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectog;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectogram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectogram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectogray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectogray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectohenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectohenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectohertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectohertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectojoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectojoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectokatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectokatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectoliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectoliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectolumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectolumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectolux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectolux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectometer : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectomole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectomole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectonewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectonewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectonit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectonit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectopascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectopascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectophot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectophot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectorad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectorad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/HectoroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/HectoroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectosiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectosiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectosievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectosievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectotesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectotesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectotorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectotorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectovolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectovolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectowatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectowatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/HectowattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/HectowattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hectoweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hectoweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Henry : com/splendo/kaluga/scientific/unit/ElectricInductance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Henry;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/HenryMultiple : com/splendo/kaluga/scientific/unit/ElectricInductance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/HenryMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/HenryMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/HenryMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Hertz : com/splendo/kaluga/scientific/unit/Frequency, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hertz;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/HertzMultiple : com/splendo/kaluga/scientific/unit/Frequency, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/HertzMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/HertzMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/HertzMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Horsepower : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Horsepower;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/HorsepowerHour : com/splendo/kaluga/scientific/unit/ImperialEnergy {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/HorsepowerHour;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Hour : com/splendo/kaluga/scientific/unit/Time {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Hour;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Illuminance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Illuminance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Illuminance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Illuminance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/IlluminanceUnitKt {
	public static final fun getIlluminanceUnits ()Ljava/util/Set;
	public static final fun getImperialIlluminanceUnits ()Ljava/util/Set;
	public static final fun getMetricIlluminanceUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialAcceleration : com/splendo/kaluga/scientific/unit/Acceleration, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public abstract fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialAcceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialAction : com/splendo/kaluga/scientific/unit/Action, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialAction$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialAction;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialAction;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialAction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialAction$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialAction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialAction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialAction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialArea : com/splendo/kaluga/scientific/unit/Area, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialArea$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialArea;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialArea$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialAreaDensity : com/splendo/kaluga/scientific/unit/AreaDensity, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialAreaDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialAreaDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialAreaDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialDensity : com/splendo/kaluga/scientific/unit/Density, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/ImperialDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialDensity;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialDynamicViscosity : com/splendo/kaluga/scientific/unit/DynamicViscosity, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialPressure;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity;Lcom/splendo/kaluga/scientific/unit/ImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPressure ()Lcom/splendo/kaluga/scientific/unit/ImperialPressure;
	public synthetic fun getPressure ()Lcom/splendo/kaluga/scientific/unit/Pressure;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialDynamicViscosity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialDynamicViscosity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialDynamicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialEnergy : com/splendo/kaluga/scientific/unit/Energy, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialEnergy$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialFluidDram : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialFluidDram;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/ImperialFluidOunce : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialFluidOunce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialForce : com/splendo/kaluga/scientific/unit/Force, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialForce$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialForce$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialGallon : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialGallon;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialIlluminance : com/splendo/kaluga/scientific/unit/Illuminance, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialIlluminance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialJolt : com/splendo/kaluga/scientific/unit/Jolt, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialJolt$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialJolt;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialJolt;Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialJolt;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/Acceleration;
	public fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialJolt$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialJolt$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialJolt;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialJolt;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialJolt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialKinematicViscosity : com/splendo/kaluga/scientific/unit/KinematicViscosity, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialArea;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialArea;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity;Lcom/splendo/kaluga/scientific/unit/ImperialArea;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getArea ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getArea ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialKinematicViscosity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialKinematicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialLength : com/splendo/kaluga/scientific/unit/Length, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialLength$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialLength;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialLength$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialLinearMassDensity : com/splendo/kaluga/scientific/unit/LinearMassDensity, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialLinearMassDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialLinearMassDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialLuminance : com/splendo/kaluga/scientific/unit/Luminance, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialLuminance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialLuminance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialLuminance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialLuminousExposure : com/splendo/kaluga/scientific/unit/LuminousExposure, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure;Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getIlluminance ()Lcom/splendo/kaluga/scientific/unit/Illuminance;
	public fun getIlluminance ()Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialLuminousExposure$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialLuminousExposure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMassFlowRate : com/splendo/kaluga/scientific/unit/MassFlowRate, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMassFlowRate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMassFlowRate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper : com/splendo/kaluga/scientific/unit/ImperialAcceleration {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getMetricAndImperial ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper : com/splendo/kaluga/scientific/unit/ImperialEnergy {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getMetricAndImperialEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialEnergyWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getMetricAndImperialPower ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolality : com/splendo/kaluga/scientific/unit/Molality, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMolality$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialMolality;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMolality;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMolality;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMolality$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMolality$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMolality;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMolality;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolality$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarEnergy : com/splendo/kaluga/scientific/unit/MolarEnergy, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMolarEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarMass : com/splendo/kaluga/scientific/unit/MolarMass, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMolarMass$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarMass$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarVolume : com/splendo/kaluga/scientific/unit/MolarVolume, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMolarVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarity : com/splendo/kaluga/scientific/unit/Molarity, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMolarity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMolarity;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMolarity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMolarity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMolarity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMolarity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMomentum : com/splendo/kaluga/scientific/unit/Momentum, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialMomentum$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)Lcom/splendo/kaluga/scientific/unit/ImperialMomentum;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialMomentum;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialMomentum;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMass ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getMass ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialMomentum$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialMomentum$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialMomentum;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialMomentum;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialMomentum$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialPint : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialPint;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialPower : com/splendo/kaluga/scientific/unit/Power, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialPower$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialPower;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialPower$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialPressure : com/splendo/kaluga/scientific/unit/Pressure, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialPressure$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialPressure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialQuart : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialQuart;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/scientific/unit/ImperialScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInImperial, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/ImperialScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/ImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/ImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSpecificEnergy : com/splendo/kaluga/scientific/unit/SpecificEnergy, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialSpecificEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSpecificEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSpecificVolume : com/splendo/kaluga/scientific/unit/SpecificVolume, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialSpecificVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSpecificVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSpeed : com/splendo/kaluga/scientific/unit/Speed, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialSpeed$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialLength;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialLength;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;Lcom/splendo/kaluga/scientific/unit/ImperialLength;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDistance ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getDistance ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialSpeed$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialSpeed$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSpeed$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSurfaceTension : com/splendo/kaluga/scientific/unit/SurfaceTension, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension;Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialSurfaceTension$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialSurfaceTension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialTon : com/splendo/kaluga/scientific/unit/UKImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialTon;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/ImperialTonForce : com/splendo/kaluga/scientific/unit/UKImperialForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialTonForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/ImperialTonSquareFoot : com/splendo/kaluga/scientific/unit/UKImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialTonSquareFoot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/ImperialTonSquareInch : com/splendo/kaluga/scientific/unit/UKImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialTonSquareInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialVolume : com/splendo/kaluga/scientific/unit/Volume, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialVolume$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialVolumetricFlow : com/splendo/kaluga/scientific/unit/VolumetricFlow, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialVolumetricFlow$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialVolumetricFlow$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialVolumetricFlux : com/splendo/kaluga/scientific/unit/VolumetricFlux, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux;Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;
	public fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;
	public synthetic fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialVolumetricFlux$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialVolumetricFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ImperialWeight : com/splendo/kaluga/scientific/unit/Weight, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialWeight$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ImperialWeight$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialYank : com/splendo/kaluga/scientific/unit/Yank, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ImperialYank$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialYank;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/ImperialYank;Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/ImperialYank;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialYank;
	public final fun getUsCustomary ()Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/ImperialYank$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/ImperialYank$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/ImperialYank;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/ImperialYank;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ImperialYank$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Inch : com/splendo/kaluga/scientific/unit/ImperialLength {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Inch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/InchOfMercury : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/InchOfMercury;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/InchOfWater : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/InchOfWater;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/InchOunceForce : com/splendo/kaluga/scientific/unit/ImperialEnergy {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/InchOunceForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/InchPoundForce : com/splendo/kaluga/scientific/unit/ImperialEnergy {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/InchPoundForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/InchPoundForcePerMinute : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/InchPoundForcePerMinute;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/InchPoundForcePerSecond : com/splendo/kaluga/scientific/unit/ImperialPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/InchPoundForcePerSecond;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDoseUnitKt {
	public static final fun getIonizingRadiationAbsorbedDoseUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDoseUnitKt {
	public static final fun getIonizingRadiationEquivalentDoseUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/Jolt : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Jolt$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Jolt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/Acceleration;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Jolt;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Jolt;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Jolt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/JoltUnitKt {
	public static final fun getImperialJoltUnits ()Ljava/util/Set;
	public static final fun getJoltUnits ()Ljava/util/Set;
	public static final fun getMetricJoltUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialJolt;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricJolt;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt;
}

public final class com/splendo/kaluga/scientific/unit/Joule : com/splendo/kaluga/scientific/unit/MetricEnergy, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Joule;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/JouleMultiple : com/splendo/kaluga/scientific/unit/MetricEnergy, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/JouleMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/JouleMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/JouleMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Katal : com/splendo/kaluga/scientific/unit/CatalysticActivity, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Katal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/KatalMultiple : com/splendo/kaluga/scientific/unit/CatalysticActivity, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/KatalMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/KatalMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/KatalMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Kelvin : com/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kelvin;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilo : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/KiloGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KiloGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/KiloPoundSquareInch : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KiloPoundSquareInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kiloampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kiloampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilobar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilobar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilobarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilobarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilobecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilobecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilocalorie : com/splendo/kaluga/scientific/unit/CalorieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilocalorie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilocalorie$IT : com/splendo/kaluga/scientific/unit/CalorieMultiple$IT, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilocalorie$IT;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilocandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilocandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilocoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilocoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilocurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilocurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilodalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilodalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilodyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilodyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kiloelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kiloelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kiloerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kiloerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilofarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilofarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilog : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilog;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilogram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilogram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/KilogramForce : com/splendo/kaluga/scientific/unit/MetricForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KilogramForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilogray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilogray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilohenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilohenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilohertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilohertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilojoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilojoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilokatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilokatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kiloliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kiloliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilolumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilolumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilolux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilolux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilometer : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilomole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilomole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilonewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilonewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilonit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilonit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kiloohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kiloohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilopascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilopascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilophot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilophot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilorad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilorad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/KiloroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KiloroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilosiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilosiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilosievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilosievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilotesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilotesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilotorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilotorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilovolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilovolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kilowatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kilowatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/KilowattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KilowattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Kiloweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kiloweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/KinematicViscosity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/KinematicViscosity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$KinematicViscosity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getArea ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$KinematicViscosity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/KinematicViscosity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/KinematicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/KinematicViscosityUnitKt {
	public static final fun getImperialKinematicViscosityUnits ()Ljava/util/Set;
	public static final fun getKinematicViscosityUnits ()Ljava/util/Set;
	public static final fun getMetricKinematicViscosityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialArea;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialKinematicViscosity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricArea;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity;
}

public final class com/splendo/kaluga/scientific/unit/Kip : com/splendo/kaluga/scientific/unit/USCustomaryForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Kip;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/KipSquareFoot : com/splendo/kaluga/scientific/unit/USCustomaryPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KipSquareFoot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/KipSquareInch : com/splendo/kaluga/scientific/unit/USCustomaryPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/KipSquareInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Lambert : com/splendo/kaluga/scientific/unit/MetricLuminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Lambert;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Length : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Length$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Length;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Length$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LengthUnitKt {
	public static final fun getImperialLengthUnits ()Ljava/util/Set;
	public static final fun getLengthUnits ()Ljava/util/Set;
	public static final fun getMetricLengthUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/LinearMassDensity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LinearMassDensity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$LinearMassDensity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LinearMassDensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LinearMassDensity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LinearMassDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LinearMassDensityUnitKt {
	public static final fun getImperialLinearMassDensityUnits ()Ljava/util/Set;
	public static final fun getLinearMassDensityUnits ()Ljava/util/Set;
	public static final fun getMetricLinearMassDensityUnits ()Ljava/util/Set;
	public static final fun getUKImperialLinearMassDensityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryLinearMassDensityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/ImperialLinearMassDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricLength;)Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;
}

public final class com/splendo/kaluga/scientific/unit/Liter : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Liter;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/LiterMultiple : com/splendo/kaluga/scientific/unit/MetricVolume, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LiterMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LiterMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LiterMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Lumen : com/splendo/kaluga/scientific/unit/LuminousFlux, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Lumen;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/LumenMultiple : com/splendo/kaluga/scientific/unit/LuminousFlux, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LumenMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LumenMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LumenMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Luminance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Luminance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Luminance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Luminance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LuminanceUnitKt {
	public static final fun getImperialLuminanceUnits ()Ljava/util/Set;
	public static final fun getLuminanceUnits ()Ljava/util/Set;
	public static final fun getMetricLuminanceUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/LuminousEnergy : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LuminousEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/LuminousFlux;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getLuminousFlux ()Lcom/splendo/kaluga/scientific/unit/LuminousFlux;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousEnergy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/LuminousEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/LuminousEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LuminousEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LuminousEnergyUnitKt {
	public static final fun getLuminousEnergyUnits ()Ljava/util/Set;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/LuminousEnergy;
}

public abstract class com/splendo/kaluga/scientific/unit/LuminousExposure : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LuminousExposure$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousExposure;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getIlluminance ()Lcom/splendo/kaluga/scientific/unit/Illuminance;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousExposure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LuminousExposure;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LuminousExposure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LuminousExposureUnitsKt {
	public static final fun getImperialLuminousExposureUnits ()Ljava/util/Set;
	public static final fun getLuminousExposureUnits ()Ljava/util/Set;
	public static final fun getMetricLuminousExposureUnits ()Ljava/util/Set;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ImperialIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialLuminousExposure;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure;
}

public abstract class com/splendo/kaluga/scientific/unit/LuminousFlux : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LuminousFlux$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LuminousFlux;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LuminousFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LuminousFluxUnitKt {
	public static final fun getLuminousFluxUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/LuminousIntensity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LuminousIntensity$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LuminousIntensity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LuminousIntensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/LuminousIntensityUnitKt {
	public static final fun getLuminousIntensityUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Lux : com/splendo/kaluga/scientific/unit/MetricIlluminance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Lux;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/LuxMultiple : com/splendo/kaluga/scientific/unit/MetricIlluminance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/LuxMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/LuxMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/LuxMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MagneticFlux : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MagneticFlux$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MagneticFlux;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MagneticFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MagneticFluxUnitKt {
	public static final fun getMagneticFluxUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/MagneticInduction : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MagneticInduction$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MagneticInduction;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MagneticInduction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MagneticInductionUnitKt {
	public static final fun getMagneticInductionUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/MassFlowRate : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MassFlowRate$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$MassFlowRate;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MassFlowRate;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MassFlowRate;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MassFlowRate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MassFlowRateUnitKt {
	public static final fun getImperialMassFlowRateUnits ()Ljava/util/Set;
	public static final fun getMassFlowRateUnits ()Ljava/util/Set;
	public static final fun getMetricMassFlowRateUnits ()Ljava/util/Set;
	public static final fun getUKImperialMassFlowRateUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryMassFlowRateUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialMassFlowRate;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;
}

public final class com/splendo/kaluga/scientific/unit/Maxwell : com/splendo/kaluga/scientific/unit/MagneticFlux {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Maxwell;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/MeasurementSystem : com/splendo/kaluga/scientific/unit/MeasurementUsage, java/io/Serializable {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInImperial {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$Metric : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetric {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndImperial {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndUKImperial {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndUSCustomary {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUKImperial {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary : com/splendo/kaluga/scientific/unit/MeasurementSystem, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUSCustomary {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInImperial : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUKImperial, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUSCustomary {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetric {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndImperial : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInImperial, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetric {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndUKImperial : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetric, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUKImperial {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndUSCustomary : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetric, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUSCustomary {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUKImperial {
}

public abstract interface class com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUSCustomary {
}

public final class com/splendo/kaluga/scientific/unit/Mega : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/MegaGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MegaGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megabar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megabar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megabarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megabarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megabecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megabecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megacalorie : com/splendo/kaluga/scientific/unit/CalorieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megacalorie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megacalorie$IT : com/splendo/kaluga/scientific/unit/CalorieMultiple$IT, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megacalorie$IT;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megacandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megacandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megacoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megacoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megacurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megacurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megadalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megadalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megadyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megadyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megafarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megafarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megag : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megag;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megagram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megagram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megagray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megagray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megahenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megahenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megahertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megahertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megajoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megajoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megakatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megakatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megalumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megalumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megalux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megalux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megameter : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megamole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megamole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Meganewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Meganewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Meganit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Meganit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megapascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megapascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megarad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MegaroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MegaroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megasiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megasiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megasievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megasievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megatesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megatesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megatorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megatorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megavolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megavolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megawatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megawatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MegawattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MegawattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Megaweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Megaweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Meter : com/splendo/kaluga/scientific/unit/MetricLength, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Meter;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/MeterMultiple : com/splendo/kaluga/scientific/unit/MetricLength, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MeterMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MeterMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MeterMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricAcceleration : com/splendo/kaluga/scientific/unit/Acceleration, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAcceleration$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public abstract fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricAcceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAction : com/splendo/kaluga/scientific/unit/Action, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAction$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAction;Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAction;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAction$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration : com/splendo/kaluga/scientific/unit/Acceleration, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialAccelerationWrapper;
	public final fun getMetric ()Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialAction : com/splendo/kaluga/scientific/unit/Action, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialAction;
	public final fun getMetric ()Lcom/splendo/kaluga/scientific/unit/MetricAction;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAndImperialAction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialAction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy : com/splendo/kaluga/scientific/unit/Energy, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialJolt : com/splendo/kaluga/scientific/unit/Jolt, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/Acceleration;
	public fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialJolt;
	public final fun getMetric ()Lcom/splendo/kaluga/scientific/unit/MetricJolt;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAndImperialJolt$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialJolt;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialJolt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy : com/splendo/kaluga/scientific/unit/MolarEnergy, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;
	public final fun getMetric ()Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricAndImperialPower : com/splendo/kaluga/scientific/unit/Power, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialPower$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndImperial, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity : com/splendo/kaluga/scientific/unit/HeatCapacity, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun getMetric ()Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndUKImperial, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature : com/splendo/kaluga/scientific/unit/Temperature, com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUKImperial, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Temperature;Ljava/lang/String;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance : com/splendo/kaluga/scientific/unit/ThermalResistance, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMetric ()Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Power;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public synthetic fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public final fun getUkImperial ()Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetricAndUSCustomary, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricArea : com/splendo/kaluga/scientific/unit/Area, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricArea$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricArea;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricArea$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAreaDensity : com/splendo/kaluga/scientific/unit/AreaDensity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricArea;)Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricAreaDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricAreaDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricAreaDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MetricBaseUnit : com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public abstract fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
}

public final class com/splendo/kaluga/scientific/unit/MetricBaseUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/MetricCup : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricCup;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MetricDensity : com/splendo/kaluga/scientific/unit/Density, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricVolume;)Lcom/splendo/kaluga/scientific/unit/MetricDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricDensity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricDynamicViscosity : com/splendo/kaluga/scientific/unit/DynamicViscosity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricPressure;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricPressure;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity;Lcom/splendo/kaluga/scientific/unit/MetricPressure;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPressure ()Lcom/splendo/kaluga/scientific/unit/MetricPressure;
	public synthetic fun getPressure ()Lcom/splendo/kaluga/scientific/unit/Pressure;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricDynamicViscosity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricDynamicViscosity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricDynamicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricEnergy : com/splendo/kaluga/scientific/unit/Energy, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricEnergy$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricForce : com/splendo/kaluga/scientific/unit/Force, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricForce$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricForce$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricHeatCapacity : com/splendo/kaluga/scientific/unit/HeatCapacity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricHorsepower : com/splendo/kaluga/scientific/unit/MetricPower {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricHorsepower;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricIlluminance : com/splendo/kaluga/scientific/unit/Illuminance, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricIlluminance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricIlluminance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricJolt : com/splendo/kaluga/scientific/unit/Jolt, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricJolt$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricJolt;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricJolt;Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricJolt;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/Acceleration;
	public fun getAcceleration ()Lcom/splendo/kaluga/scientific/unit/MetricAcceleration;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricJolt$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricJolt$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricJolt;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricJolt;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricJolt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricKinematicViscosity : com/splendo/kaluga/scientific/unit/KinematicViscosity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricArea;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricArea;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricArea;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity;Lcom/splendo/kaluga/scientific/unit/MetricArea;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getArea ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getArea ()Lcom/splendo/kaluga/scientific/unit/MetricArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricKinematicViscosity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricKinematicViscosity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricKinematicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricLength : com/splendo/kaluga/scientific/unit/Length, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricLength$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricLength;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricLength$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricLinearMassDensity : com/splendo/kaluga/scientific/unit/LinearMassDensity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricLength;)Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricLength;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricLinearMassDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricLinearMassDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricLinearMassDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricLuminance : com/splendo/kaluga/scientific/unit/Luminance, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricLuminance$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricLuminance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricLuminance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricLuminousExposure : com/splendo/kaluga/scientific/unit/LuminousExposure, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure;Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getIlluminance ()Lcom/splendo/kaluga/scientific/unit/Illuminance;
	public fun getIlluminance ()Lcom/splendo/kaluga/scientific/unit/MetricIlluminance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricLuminousExposure$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricLuminousExposure;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricLuminousExposure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMassFlowRate : com/splendo/kaluga/scientific/unit/MassFlowRate, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate;Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMassFlowRate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMassFlowRate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMassFlowRate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper : com/splendo/kaluga/scientific/unit/MetricAcceleration {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getMetricAndImperial ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialAcceleration;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialAccelerationWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper : com/splendo/kaluga/scientific/unit/MetricEnergy {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getMetricAndImperialEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialEnergyWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper : com/splendo/kaluga/scientific/unit/MetricPower {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getMetricAndImperialPower ()Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolality : com/splendo/kaluga/scientific/unit/Molality, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMolality$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricMolality;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMolality;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMolality;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMolality$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMolality$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMolality;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMolality;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolality$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarEnergy : com/splendo/kaluga/scientific/unit/MolarEnergy, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMolarEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarMass : com/splendo/kaluga/scientific/unit/MolarMass, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMolarMass$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricMolarMass;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMolarMass;Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMolarMass;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMolarMass$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMolarMass$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMolarMass;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMolarMass;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarMass$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarVolume : com/splendo/kaluga/scientific/unit/MolarVolume, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume;Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMolarVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarity : com/splendo/kaluga/scientific/unit/Molarity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMolarity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricVolume;)Lcom/splendo/kaluga/scientific/unit/MetricMolarity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMolarity;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMolarity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMolarity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMolarity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMolarity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMolarity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMolarity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMomentum : com/splendo/kaluga/scientific/unit/Momentum, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricMomentum$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;)Lcom/splendo/kaluga/scientific/unit/MetricMomentum;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricMomentum;Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricMomentum;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMass ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getMass ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricMomentum$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricMomentum$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricMomentum;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricMomentum;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricMomentum$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MetricMultipleUnit : com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/MetricMultipleUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricMultipleUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricMultipleUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricPower : com/splendo/kaluga/scientific/unit/Power, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricPower$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricPower;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricPower$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricPressure : com/splendo/kaluga/scientific/unit/Pressure, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricPressure$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricPressure;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricPressure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/MetricScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInMetric, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/MetricScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/MetricScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpecificEnergy : com/splendo/kaluga/scientific/unit/SpecificEnergy, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/MetricEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricSpecificEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpecificEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity : com/splendo/kaluga/scientific/unit/SpecificHeatCapacity, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/HeatCapacity;
	public fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;
	public fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpecificVolume : com/splendo/kaluga/scientific/unit/SpecificVolume, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume;Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/MetricWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricSpecificVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpecificVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpeed : com/splendo/kaluga/scientific/unit/Speed, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricSpeed$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricLength;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricLength;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricLength;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricSpeed;Lcom/splendo/kaluga/scientific/unit/MetricLength;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getDistance ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getDistance ()Lcom/splendo/kaluga/scientific/unit/MetricLength;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricSpeed$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricSpeed$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSpeed$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSurfaceTension : com/splendo/kaluga/scientific/unit/SurfaceTension, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/MetricLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/MetricLength;)Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension;Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/MetricLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/MetricForce;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricLength;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricSurfaceTension$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricSurfaceTension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricThermalResistance : com/splendo/kaluga/scientific/unit/ThermalResistance, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricPower;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricPower;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricPower;)Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricPower;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricPower;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Power;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public synthetic fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricThermalResistance$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricThermalResistance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricVolume : com/splendo/kaluga/scientific/unit/Volume, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricVolume$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricVolumetricFlow : com/splendo/kaluga/scientific/unit/VolumetricFlow, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/MetricVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricVolumetricFlow$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricVolumetricFlow$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricVolumetricFlux : com/splendo/kaluga/scientific/unit/VolumetricFlux, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/MetricArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/MetricArea;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux;Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/MetricArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;
	public synthetic fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricVolumetricFlux$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricVolumetricFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/MetricWeight : com/splendo/kaluga/scientific/unit/Weight, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricWeight$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MetricWeight$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricYank : com/splendo/kaluga/scientific/unit/Yank, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MetricYank$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricYank;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/MetricYank;Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/MetricYank;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/MetricForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/MetricYank$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MetricYank$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/MetricYank;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/MetricYank;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MetricYank$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Micro : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/MicroGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MicroGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microbar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microbar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microbarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microbarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microbecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microbecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microcandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microcandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microcoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microcoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microcurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microcurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microdalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microdalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microdyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microdyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microfarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microfarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microg : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microgram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microgram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microgray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microgray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microhenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microhenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microhertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microhertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microjoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microjoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microkatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microkatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microlumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microlumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microlux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microlux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Micrometer : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Micrometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Micromole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Micromole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Micronewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Micronewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Micronit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Micronit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Micropascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Micropascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microrad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microrad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microradian : com/splendo/kaluga/scientific/unit/RadianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MicroroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MicroroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microsecond : com/splendo/kaluga/scientific/unit/SecondMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microsecond;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microsiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microsiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microsievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microsievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microsteradian : com/splendo/kaluga/scientific/unit/SteradianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microsteradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microtesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microtesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microtorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microtorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microturn : com/splendo/kaluga/scientific/unit/TurnMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microturn;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microvolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microwatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microwatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MicrowattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MicrowattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Microweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Microweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Mile : com/splendo/kaluga/scientific/unit/ImperialLength {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Mile;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milli : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/MilliGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MilliGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millibar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millibar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millibarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millibarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millibecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millibecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millicalorie : com/splendo/kaluga/scientific/unit/CalorieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millicalorie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millicalorie$IT : com/splendo/kaluga/scientific/unit/CalorieMultiple$IT, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millicalorie$IT;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millicandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millicandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millicoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millicoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millicurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millicurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millidalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millidalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millidyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millidyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millielectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millielectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millierg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millierg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millifarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millifarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millig : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millig;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milligram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milligram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MilligramForce : com/splendo/kaluga/scientific/unit/MetricForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MilligramForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milligray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milligray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millihenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millihenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millihertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millihertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millijoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millijoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millikatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millikatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millilumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millilumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millilux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millilux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millimeter : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MillimeterOfMercury : com/splendo/kaluga/scientific/unit/MetricPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MillimeterOfMercury;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MillimeterOfWater : com/splendo/kaluga/scientific/unit/MetricPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MillimeterOfWater;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millimole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millimole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millinewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millinewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millinit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millinit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millipascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millipascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliphot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliphot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millirad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millirad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliradian : com/splendo/kaluga/scientific/unit/RadianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MilliroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MilliroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millisecond : com/splendo/kaluga/scientific/unit/SecondMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millisecond;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millisiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millisiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millisievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millisievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millisteradian : com/splendo/kaluga/scientific/unit/SteradianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millisteradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millitesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millitesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millitorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millitorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliturn : com/splendo/kaluga/scientific/unit/TurnMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliturn;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Millivolt : com/splendo/kaluga/scientific/unit/VoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Millivolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliwatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliwatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/MilliwattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/MilliwattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Milliweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Milliweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Minute : com/splendo/kaluga/scientific/unit/Time {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Minute;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Molality : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Molality$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Molality;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Molality;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Molality;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Molality$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MolalityUnitKt {
	public static final fun getImperialMolalityUnits ()Ljava/util/Set;
	public static final fun getMetricMolalityUnits ()Ljava/util/Set;
	public static final fun getMolalityUnits ()Ljava/util/Set;
	public static final fun getUKImperialMolalityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryMolalityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialMolality;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricMolality;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;
}

public abstract class com/splendo/kaluga/scientific/unit/MolarEnergy : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MolarEnergy$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$MolarEnergy;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MolarEnergy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MolarEnergy;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MolarEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MolarEnergyUnitKt {
	public static final fun getImperialMolarEnergyUnits ()Ljava/util/Set;
	public static final fun getMetricAndImperialMolarEnergyUnits ()Ljava/util/Set;
	public static final fun getMetricMolarEnergyUnits ()Ljava/util/Set;
	public static final fun getMolarEnergyUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricAndImperialMolarEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricMolarEnergy;
}

public abstract class com/splendo/kaluga/scientific/unit/MolarMass : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MolarMass$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$MolarMass;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MolarMass;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MolarMass;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MolarMass$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MolarMassUnitKt {
	public static final fun getImperialMolarMassUnits ()Ljava/util/Set;
	public static final fun getMetricMolarMassUnits ()Ljava/util/Set;
	public static final fun getMolarMassUnits ()Ljava/util/Set;
	public static final fun getUKImperialMolarMassUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryMolarMassUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarMass;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricMolarMass;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;
}

public abstract class com/splendo/kaluga/scientific/unit/MolarVolume : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MolarVolume$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$MolarVolume;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MolarVolume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MolarVolume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MolarVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MolarVolumeUnitKt {
	public static final fun getImperialMolarVolumeUnits ()Ljava/util/Set;
	public static final fun getMetricMolarVolumeUnits ()Ljava/util/Set;
	public static final fun getMolarVolumeUnits ()Ljava/util/Set;
	public static final fun getUKImperialMolarVolumeUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryMolarVolumeUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/MetricMolarVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;
}

public abstract class com/splendo/kaluga/scientific/unit/Molarity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Molarity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Molarity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Molarity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Molarity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Molarity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MolarityUnitKt {
	public static final fun getImperialMolarityUnits ()Ljava/util/Set;
	public static final fun getMetricMolarityUnits ()Ljava/util/Set;
	public static final fun getMolarityUnits ()Ljava/util/Set;
	public static final fun getUKImperialMolarityUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryMolarityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/ImperialMolarity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/MetricVolume;)Lcom/splendo/kaluga/scientific/unit/MetricMolarity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;
}

public final class com/splendo/kaluga/scientific/unit/Mole : com/splendo/kaluga/scientific/unit/AmountOfSubstance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Mole;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/MoleMultiple : com/splendo/kaluga/scientific/unit/AmountOfSubstance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/MoleMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/MoleMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/MoleMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Momentum : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Momentum$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Momentum;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getMass ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Momentum;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public abstract fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Momentum;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Momentum$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/MomentumUnitKt {
	public static final fun getImperialMomentumUnits ()Ljava/util/Set;
	public static final fun getMetricMomentumUnits ()Ljava/util/Set;
	public static final fun getMomentumUnits ()Ljava/util/Set;
	public static final fun getUKImperialMomentumUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryMomentumUnits ()Ljava/util/Set;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)Lcom/splendo/kaluga/scientific/unit/ImperialMomentum;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/MetricWeight;Lcom/splendo/kaluga/scientific/unit/MetricSpeed;)Lcom/splendo/kaluga/scientific/unit/MetricMomentum;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;
}

public final class com/splendo/kaluga/scientific/unit/Nano : com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricBaseUnit;)V
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/NanoGal : com/splendo/kaluga/scientific/unit/GalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/NanoGal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoampere : com/splendo/kaluga/scientific/unit/AmpereMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoampere;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCurrent;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanobar : com/splendo/kaluga/scientific/unit/BarMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanobar;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanobarye : com/splendo/kaluga/scientific/unit/BaryeMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanobarye;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanobecquerel : com/splendo/kaluga/scientific/unit/BecquerelMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanobecquerel;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanocandela : com/splendo/kaluga/scientific/unit/CandelaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanocandela;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousIntensity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanocoulomb : com/splendo/kaluga/scientific/unit/CoulombMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanocoulomb;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCharge;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanocurie : com/splendo/kaluga/scientific/unit/CurieMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanocurie;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanodalton : com/splendo/kaluga/scientific/unit/DaltonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanodalton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanodyne : com/splendo/kaluga/scientific/unit/DyneMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanodyne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoelectronvolt : com/splendo/kaluga/scientific/unit/ElectronvoltMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoelectronvolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoerg : com/splendo/kaluga/scientific/unit/ErgMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoerg;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanofarad : com/splendo/kaluga/scientific/unit/FaradMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanofarad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricCapacitance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanog : com/splendo/kaluga/scientific/unit/GUnitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanog;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Acceleration;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanogram : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanogram;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanogray : com/splendo/kaluga/scientific/unit/GrayMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanogray;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanohenry : com/splendo/kaluga/scientific/unit/HenryMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanohenry;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricInductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanohertz : com/splendo/kaluga/scientific/unit/HertzMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanohertz;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Frequency;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanojoule : com/splendo/kaluga/scientific/unit/JouleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanojoule;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanokatal : com/splendo/kaluga/scientific/unit/KatalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanokatal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$CatalysticActivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoliter : com/splendo/kaluga/scientific/unit/LiterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoliter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanolumen : com/splendo/kaluga/scientific/unit/LumenMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanolumen;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$LuminousFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanolux : com/splendo/kaluga/scientific/unit/LuxMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanolux;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanometer : com/splendo/kaluga/scientific/unit/MeterMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanomole : com/splendo/kaluga/scientific/unit/MoleMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanomole;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$AmountOfSubstance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanonewton : com/splendo/kaluga/scientific/unit/NewtonMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanonewton;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanonit : com/splendo/kaluga/scientific/unit/NitMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanonit;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoohm : com/splendo/kaluga/scientific/unit/OhmMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoohm;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanopascal : com/splendo/kaluga/scientific/unit/PascalMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanopascal;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanophot : com/splendo/kaluga/scientific/unit/PhotMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanophot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanorad : com/splendo/kaluga/scientific/unit/RadMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanorad;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoradian : com/splendo/kaluga/scientific/unit/RadianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/NanoroentgenEquivalentMan : com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/NanoroentgenEquivalentMan;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanosecond : com/splendo/kaluga/scientific/unit/SecondMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanosecond;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanosiemens : com/splendo/kaluga/scientific/unit/SiemensMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanosiemens;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanosievert : com/splendo/kaluga/scientific/unit/SievertMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanosievert;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanosteradian : com/splendo/kaluga/scientific/unit/SteradianMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanosteradian;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanotesla : com/splendo/kaluga/scientific/unit/TeslaMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanotesla;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanotorr : com/splendo/kaluga/scientific/unit/TorrMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanotorr;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoturn : com/splendo/kaluga/scientific/unit/TurnMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoturn;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanovolt : com/splendo/kaluga/scientific/unit/Voltage, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanovolt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanowatt : com/splendo/kaluga/scientific/unit/WattMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanowatt;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/NanowattHour : com/splendo/kaluga/scientific/unit/WattHourMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/NanowattHour;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Nanoweber : com/splendo/kaluga/scientific/unit/WeberMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nanoweber;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/NauticalMile : com/splendo/kaluga/scientific/unit/MetricLength {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/NauticalMile;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Length;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Newton : com/splendo/kaluga/scientific/unit/MetricForce, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Newton;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/NewtonMultiple : com/splendo/kaluga/scientific/unit/MetricForce, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/NewtonMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/NewtonMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/NewtonMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Nit : com/splendo/kaluga/scientific/unit/MetricLuminance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Nit;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/NitMultiple : com/splendo/kaluga/scientific/unit/MetricLuminance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/NitMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/NitMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/NitMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Ohm : com/splendo/kaluga/scientific/unit/ElectricResistance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Ohm;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/OhmMultiple : com/splendo/kaluga/scientific/unit/ElectricResistance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/OhmMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/OhmMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/OhmMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/One : com/splendo/kaluga/scientific/unit/Dimensionless {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/One;
	public static final field UNIT_VALUE D
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Dimensionless;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Ounce : com/splendo/kaluga/scientific/unit/ImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Ounce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/OunceForce : com/splendo/kaluga/scientific/unit/ImperialForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/OunceForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/OunceSquareInch : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/OunceSquareInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Pascal : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Pascal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/PascalMultiple : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/PascalMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/PascalMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/PascalMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Percent : com/splendo/kaluga/scientific/unit/Dimensionless {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Percent;
	public static final field PARTS_PER_HUNDRED D
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Dimensionless;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Permill : com/splendo/kaluga/scientific/unit/Dimensionless {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Permill;
	public static final field PARTS_PER_THOUSAND D
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Dimensionless;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Phot : com/splendo/kaluga/scientific/unit/MetricIlluminance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Phot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Illuminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/PhotMultiple : com/splendo/kaluga/scientific/unit/MetricIlluminance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/PhotMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/PhotMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/PhotMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Pound : com/splendo/kaluga/scientific/unit/ImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Pound;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/PoundForce : com/splendo/kaluga/scientific/unit/ImperialForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/PoundForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/PoundSquareFoot : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/PoundSquareFoot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/PoundSquareInch : com/splendo/kaluga/scientific/unit/ImperialPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/PoundSquareInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Poundal : com/splendo/kaluga/scientific/unit/ImperialForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Poundal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/Power : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Power$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Power;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Power$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/PowerUnitKt {
	public static final fun getImperial (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/ImperialMetricAndImperialPowerWrapper;
	public static final fun getImperialPowerUnits ()Ljava/util/Set;
	public static final fun getMetric (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/MetricMetricAndImperialPowerWrapper;
	public static final fun getMetricAndImperialPowerUnits ()Ljava/util/Set;
	public static final fun getMetricPowerUnits ()Ljava/util/Set;
	public static final fun getPowerUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/Pressure : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Pressure$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Pressure;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Pressure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/PressureUnitKt {
	public static final fun getImperialPressureUnits ()Ljava/util/Set;
	public static final fun getMetricPressureUnits ()Ljava/util/Set;
	public static final fun getPressureUnits ()Ljava/util/Set;
	public static final fun getUKImperialPressureUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryPressureUnits ()Ljava/util/Set;
	public static final fun getUkImperial (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;)Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper;
	public static final fun getUsCustomary (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper;
}

public final class com/splendo/kaluga/scientific/unit/Rad : com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field GRAY_IN_RAD D
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Rad;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationAbsorbedDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/RadMultiple : com/splendo/kaluga/scientific/unit/IonizingRadiationAbsorbedDose, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/RadMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/RadMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/RadMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Radian : com/splendo/kaluga/scientific/unit/Angle, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Radian;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/RadianMultiple : com/splendo/kaluga/scientific/unit/Angle, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/RadianMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/RadianMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/RadianMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Radioactivity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Radioactivity$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Radioactivity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Radioactivity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/RadioactivityUnitKt {
	public static final fun getRadioactivityUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Rankine : com/splendo/kaluga/scientific/unit/USCustomaryTemperature {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Rankine;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/RoentgenEquivalentMan : com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/RoentgenEquivalentMan;
	public static final field SIEVERT_IN_REM D
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple : com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/RoentgenEquivalentManMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Rutherford : com/splendo/kaluga/scientific/unit/Radioactivity {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Rutherford;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Radioactivity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/scientific/unit/ScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage, java/io/Serializable {
	public abstract fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public abstract fun getSymbol ()Ljava/lang/String;
	public abstract fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public abstract fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/ScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/ScientificUnitKt {
	public static final fun convert (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun convert (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun convert (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)D
	public static final fun convert (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;)D
	public static synthetic fun convert$default (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static synthetic fun convert$default (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)D
	public static final fun getUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Second : com/splendo/kaluga/scientific/unit/Time, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Second;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Time;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SecondMultiple : com/splendo/kaluga/scientific/unit/Time, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SecondMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SecondMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SecondMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Siemens : com/splendo/kaluga/scientific/unit/ElectricConductance, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Siemens;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ElectricConductance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SiemensMultiple : com/splendo/kaluga/scientific/unit/ElectricConductance, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SiemensMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SiemensMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SiemensMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Sievert : com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Sievert;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$IonizingRadiationEquivalentDose;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SievertMultiple : com/splendo/kaluga/scientific/unit/IonizingRadiationEquivalentDose, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SievertMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SievertMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SievertMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Skot : com/splendo/kaluga/scientific/unit/MetricLuminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Skot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Slug : com/splendo/kaluga/scientific/unit/ImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Slug;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SolidAngle : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SolidAngle$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SolidAngle;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SolidAngle$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/SolidAngleUnitKt {
	public static final fun getSolidAngleUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Spat : com/splendo/kaluga/scientific/unit/SolidAngle, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Spat;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SpecificEnergy : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SpecificEnergy$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificEnergy;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificEnergy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SpecificEnergy;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SpecificEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/SpecificEnergyUnitKt {
	public static final fun getImperialSpecificEnergyUnits ()Ljava/util/Set;
	public static final fun getMetricSpecificEnergyUnits ()Ljava/util/Set;
	public static final fun getSpecificEnergyUnits ()Ljava/util/Set;
	public static final fun getUKImperialSpecificEnergyUnits ()Ljava/util/Set;
	public static final fun getUSCustomarySpecificEnergyUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricEnergy;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;
}

public abstract class com/splendo/kaluga/scientific/unit/SpecificHeatCapacity : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SpecificHeatCapacity$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificHeatCapacity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/HeatCapacity;
	public abstract fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificHeatCapacity;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SpecificHeatCapacity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SpecificHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/SpecificHeatCapacityUnitKt {
	public static final fun getMetricSpecificHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getSpecificHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getUKImperialSpecificHeatCapacityUnits ()Ljava/util/Set;
	public static final fun getUSCustomarySpecificHeatCapacityUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricHeatCapacity;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
}

public abstract class com/splendo/kaluga/scientific/unit/SpecificVolume : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SpecificVolume$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificVolume;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SpecificVolume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SpecificVolume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SpecificVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/SpecificVolumeUnitKt {
	public static final fun getImperialSpecificVolumeUnits ()Ljava/util/Set;
	public static final fun getMetricSpecificVolumeUnits ()Ljava/util/Set;
	public static final fun getSpecificVolumeUnits ()Ljava/util/Set;
	public static final fun getUKImperialSpecificVolumeUnits ()Ljava/util/Set;
	public static final fun getUSCustomarySpecificVolumeUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/ImperialSpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/MetricWeight;)Lcom/splendo/kaluga/scientific/unit/MetricSpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
}

public abstract class com/splendo/kaluga/scientific/unit/Speed : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Speed$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Speed;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getDistance ()Lcom/splendo/kaluga/scientific/unit/Length;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Speed;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Speed;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Speed$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/SpeedUnitKt {
	public static final fun getImperialSpeedOfLight ()Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun getImperialSpeedUnits ()Ljava/util/Set;
	public static final fun getMetricSpeedOfLight ()Lcom/splendo/kaluga/scientific/DefaultScientificValue;
	public static final fun getMetricSpeedUnits ()Ljava/util/Set;
	public static final fun getSpeedUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialLength;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricLength;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricSpeed;
}

public final class com/splendo/kaluga/scientific/unit/SquareCentimeter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareCentimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareDecameter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareDecameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareDecimeter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareDecimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareDegree : com/splendo/kaluga/scientific/unit/SolidAngle {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareDegree;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareFoot : com/splendo/kaluga/scientific/unit/ImperialArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareFoot;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareGigameter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareGigameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareHectometer : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareHectometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareInch : com/splendo/kaluga/scientific/unit/ImperialArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareInch;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareKilometer : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareKilometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareMegameter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareMegameter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareMeter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareMeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareMicrometer : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareMicrometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareMile : com/splendo/kaluga/scientific/unit/ImperialArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareMile;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareMillimeter : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareMillimeter;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareNanometer : com/splendo/kaluga/scientific/unit/MetricArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareNanometer;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/SquareYard : com/splendo/kaluga/scientific/unit/ImperialArea, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/SquareYard;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Area;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Steradian : com/splendo/kaluga/scientific/unit/SolidAngle, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Steradian;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SolidAngle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SteradianMultiple : com/splendo/kaluga/scientific/unit/SolidAngle, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SteradianMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SteradianMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SteradianMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Stilb : com/splendo/kaluga/scientific/unit/MetricLuminance {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Stilb;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Luminance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Stone : com/splendo/kaluga/scientific/unit/ImperialWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Stone;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/SurfaceTension : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/SurfaceTension$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$SurfaceTension;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$SurfaceTension;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/SurfaceTension;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/SurfaceTension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/SurfaceTensionUnitKt {
	public static final fun getImperialSurfaceTensionUnits ()Ljava/util/Set;
	public static final fun getMetricSurfaceTensionUnits ()Ljava/util/Set;
	public static final fun getSurfaceTensionUnits ()Ljava/util/Set;
	public static final fun getUKImperialSurfaceTensionUnits ()Ljava/util/Set;
	public static final fun getUSCustomarySurfaceTensionUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/ImperialSurfaceTension;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/MetricLength;)Lcom/splendo/kaluga/scientific/unit/MetricSurfaceTension;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;
}

public abstract interface class com/splendo/kaluga/scientific/unit/SystemScientificUnit : com/splendo/kaluga/scientific/unit/ScientificUnit {
	public abstract fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public final class com/splendo/kaluga/scientific/unit/SystemScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/SystemScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public abstract class com/splendo/kaluga/scientific/unit/Temperature : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Temperature$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Temperature;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Temperature;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Temperature;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Temperature$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/TemperatureUnitKt {
	public static final fun convertDelta (Lcom/splendo/kaluga/scientific/unit/Temperature;Lcom/splendo/kaluga/base/utils/Decimal;Lcom/splendo/kaluga/scientific/unit/Temperature;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final fun convertDelta (Lcom/splendo/kaluga/scientific/unit/Temperature;Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/Temperature;)D
	public static final fun convertDelta (Lcom/splendo/kaluga/scientific/unit/Temperature;Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/Temperature;ILcom/splendo/kaluga/base/utils/RoundingMode;)D
	public static synthetic fun convertDelta$default (Lcom/splendo/kaluga/scientific/unit/Temperature;Ljava/lang/Number;Lcom/splendo/kaluga/scientific/unit/Temperature;ILcom/splendo/kaluga/base/utils/RoundingMode;ILjava/lang/Object;)D
	public static final fun getMetricAndUkImperialTemperatureUnits ()Ljava/util/Set;
	public static final fun getTemperatureUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryTemperatureUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Tesla : com/splendo/kaluga/scientific/unit/MagneticInduction, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Tesla;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticInduction;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/TeslaMultiple : com/splendo/kaluga/scientific/unit/MagneticInduction, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/TeslaMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/TeslaMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/TeslaMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/ThermalResistance : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/ThermalResistance$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$ThermalResistance;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Power;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$ThermalResistance;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/ThermalResistance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/ThermalResistance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/ThermalResistanceUnitKt {
	public static final fun getMetricAndUKImperialThermalResistanceUnits ()Ljava/util/Set;
	public static final fun getMetricThermalResistanceUnits ()Ljava/util/Set;
	public static final fun getThermalResistanceUnits ()Ljava/util/Set;
	public static final fun getUKImperialThermalResistanceUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryThermalResistanceUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;)Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialThermalResistance;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/MetricPower;)Lcom/splendo/kaluga/scientific/unit/MetricThermalResistance;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;)Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;Lcom/splendo/kaluga/scientific/unit/MetricAndImperialPower;)Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;
}

public abstract class com/splendo/kaluga/scientific/unit/Time : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Time$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Time;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Time$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/TimeUnitKt {
	public static final fun getTimeUnits ()Ljava/util/Set;
}

public final class com/splendo/kaluga/scientific/unit/Tonne : com/splendo/kaluga/scientific/unit/GramMultiple, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Tonne;
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/TonneForce : com/splendo/kaluga/scientific/unit/MetricForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/TonneForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Torr : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Torr;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/TorrMultiple : com/splendo/kaluga/scientific/unit/MetricPressure, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/TorrMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/TorrMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/TorrMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Turn : com/splendo/kaluga/scientific/unit/Angle, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Turn;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Angle;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/TurnMultiple : com/splendo/kaluga/scientific/unit/Angle, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/TurnMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/TurnMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/TurnMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialAreaDensity : com/splendo/kaluga/scientific/unit/AreaDensity, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialAreaDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialAreaDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialAreaDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialDensity : com/splendo/kaluga/scientific/unit/Density, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity : com/splendo/kaluga/scientific/unit/DynamicViscosity, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPressure ()Lcom/splendo/kaluga/scientific/unit/Pressure;
	public fun getPressure ()Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialDynamicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/UKImperialForce : com/splendo/kaluga/scientific/unit/Force, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialForce$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/UKImperialForce$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialHeatCapacity : com/splendo/kaluga/scientific/unit/HeatCapacity, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;)Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper : com/splendo/kaluga/scientific/unit/UKImperialForce {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialForce;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialForce;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialForce;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialImperialForceWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper : com/splendo/kaluga/scientific/unit/UKImperialVolume {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper : com/splendo/kaluga/scientific/unit/UKImperialWeight {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity : com/splendo/kaluga/scientific/unit/LinearMassDensity, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialLinearMassDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMassFlowRate : com/splendo/kaluga/scientific/unit/MassFlowRate, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialMassFlowRate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialMassFlowRate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMassFlowRate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolality : com/splendo/kaluga/scientific/unit/Molality, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialMolality$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialMolality$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialMolality$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialMolality;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolality$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolarMass : com/splendo/kaluga/scientific/unit/MolarMass, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialMolarMass$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialMolarMass;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolarMass$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolarVolume : com/splendo/kaluga/scientific/unit/MolarVolume, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialMolarVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialMolarVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolarVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolarity : com/splendo/kaluga/scientific/unit/Molarity, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialMolarity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialMolarity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMolarity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMomentum : com/splendo/kaluga/scientific/unit/Momentum, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMass ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getMass ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialMomentum$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialMomentum;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialMomentum$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/UKImperialPressure : com/splendo/kaluga/scientific/unit/Pressure, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialPressure$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/UKImperialPressure;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/UKImperialPressure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialPressureWrapper : com/splendo/kaluga/scientific/unit/UKImperialPressure {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialPressure;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;)Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialPressure;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialPressure;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialPressureWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialPressureWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialPressureWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/UKImperialScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUKImperial, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/UKImperialScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/UKImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/UKImperialScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy : com/splendo/kaluga/scientific/unit/SpecificEnergy, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSpecificEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity : com/splendo/kaluga/scientific/unit/SpecificHeatCapacity, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/HeatCapacity;
	public fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/UKImperialHeatCapacity;
	public fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSpecificHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSpecificVolume : com/splendo/kaluga/scientific/unit/SpecificVolume, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialSpecificVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialSpecificVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSpecificVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSurfaceTension : com/splendo/kaluga/scientific/unit/SurfaceTension, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/UKImperialForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialSurfaceTension$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialSurfaceTension;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialSurfaceTension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialThermalResistance : com/splendo/kaluga/scientific/unit/ThermalResistance, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialPower;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;)Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialPower;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Power;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/MetricAndUKImperialTemperature;
	public synthetic fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialThermalResistance$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialThermalResistance;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialThermalResistance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/UKImperialVolume : com/splendo/kaluga/scientific/unit/Volume, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialVolume$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/UKImperialVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow : com/splendo/kaluga/scientific/unit/VolumetricFlow, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux : com/splendo/kaluga/scientific/unit/VolumetricFlux, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public synthetic fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/UKImperialWeight : com/splendo/kaluga/scientific/unit/Weight, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialWeight$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/UKImperialWeight;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/UKImperialWeight$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialYank : com/splendo/kaluga/scientific/unit/Yank, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/UKImperialYank$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UKImperialForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialYank;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UKImperialYank;Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UKImperialYank;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/UKImperialForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/UKImperialYank$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UKImperialYank$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/UKImperialYank;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/UKImperialYank;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/UKImperialYank$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryAreaDensity : com/splendo/kaluga/scientific/unit/AreaDensity, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryAreaDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryAreaDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryAreaDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryDensity : com/splendo/kaluga/scientific/unit/Density, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity : com/splendo/kaluga/scientific/unit/DynamicViscosity, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPressure ()Lcom/splendo/kaluga/scientific/unit/Pressure;
	public fun getPressure ()Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getTime ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryDynamicViscosity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/USCustomaryForce : com/splendo/kaluga/scientific/unit/Force, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryForce$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Force;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryForce$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity : com/splendo/kaluga/scientific/unit/HeatCapacity, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;)Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper : com/splendo/kaluga/scientific/unit/USCustomaryForce {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialForce;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialForce;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialForce;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialForce;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialForceWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper : com/splendo/kaluga/scientific/unit/USCustomaryPressure {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialPressure;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialPressure;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialPressure;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialPressure;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialPressureWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialVolume;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper : com/splendo/kaluga/scientific/unit/USCustomaryWeight {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper;Lcom/splendo/kaluga/scientific/unit/ImperialWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public final fun getImperial ()Lcom/splendo/kaluga/scientific/unit/ImperialWeight;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity : com/splendo/kaluga/scientific/unit/LinearMassDensity, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryLinearMassDensity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate : com/splendo/kaluga/scientific/unit/MassFlowRate, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMassFlowRate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolality : com/splendo/kaluga/scientific/unit/Molality, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryMolality$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryMolality;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolality$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolarMass : com/splendo/kaluga/scientific/unit/MolarMass, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWeight ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryMolarMass$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarMass;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolarMass$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolarVolume : com/splendo/kaluga/scientific/unit/MolarVolume, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryMolarVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolarVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolarity : com/splendo/kaluga/scientific/unit/Molarity, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmountOfSubstance ()Lcom/splendo/kaluga/scientific/unit/AmountOfSubstance;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryMolarity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryMolarity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMolarity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMomentum : com/splendo/kaluga/scientific/unit/Momentum, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMass ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getMass ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/ImperialSpeed;
	public synthetic fun getSpeed ()Lcom/splendo/kaluga/scientific/unit/Speed;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryMomentum$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryMomentum;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryMomentum$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/USCustomaryPressure : com/splendo/kaluga/scientific/unit/Pressure, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Pressure;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/USCustomaryPressure;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryPressure$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit : com/splendo/kaluga/scientific/unit/MeasurementUsage$UsedInUSCustomary, com/splendo/kaluga/scientific/unit/SystemScientificUnit {
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit$DefaultImpls {
	public static fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/USCustomaryScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static fun deltaToSIUnitDelta (Lcom/splendo/kaluga/scientific/unit/USCustomaryScientificUnit;Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy : com/splendo/kaluga/scientific/unit/SpecificEnergy, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/Energy;
	public fun getEnergy ()Lcom/splendo/kaluga/scientific/unit/ImperialEnergy;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySpecificEnergy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity : com/splendo/kaluga/scientific/unit/SpecificHeatCapacity, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/HeatCapacity;
	public fun getHeatCapacity ()Lcom/splendo/kaluga/scientific/unit/USCustomaryHeatCapacity;
	public fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getPerWeight ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySpecificHeatCapacity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySpecificVolume : com/splendo/kaluga/scientific/unit/SpecificVolume, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Weight;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomarySpecificVolume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomarySpecificVolume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySpecificVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySurfaceTension : com/splendo/kaluga/scientific/unit/SurfaceTension, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;)Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/ImperialLength;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialLength;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Length;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomarySurfaceTension$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomarySurfaceTension;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomarySurfaceTension$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/USCustomaryTemperature : com/splendo/kaluga/scientific/unit/Temperature, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Temperature;Ljava/lang/String;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryTemperature$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryThermalResistance : com/splendo/kaluga/scientific/unit/ThermalResistance, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialPower;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;)Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;Lcom/splendo/kaluga/scientific/unit/ImperialPower;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialPower;
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Power;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public synthetic fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/Temperature;
	public fun getTemperature ()Lcom/splendo/kaluga/scientific/unit/USCustomaryTemperature;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryThermalResistance$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryThermalResistance;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryThermalResistance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/USCustomaryVolume : com/splendo/kaluga/scientific/unit/Volume, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Volume;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryVolume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow : com/splendo/kaluga/scientific/unit/VolumetricFlow, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolume ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;
	public synthetic fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux : com/splendo/kaluga/scientific/unit/VolumetricFlux, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/ImperialArea;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
	public synthetic fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/USCustomaryWeight : com/splendo/kaluga/scientific/unit/Weight, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Weight;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/USCustomaryWeight;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryWeight$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryYank : com/splendo/kaluga/scientific/unit/Yank, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/USCustomaryYank$Companion;
	public fun <init> (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/Time;)V
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/Time;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/Time;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public fun getForce ()Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;
	public fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class com/splendo/kaluga/scientific/unit/USCustomaryYank$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USCustomaryYank$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USCustomaryYank$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/USTonSquareFoot : com/splendo/kaluga/scientific/unit/USCustomaryPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USTonSquareFoot;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/USTonSquareInch : com/splendo/kaluga/scientific/unit/USCustomaryPressure {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/USTonSquareInch;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedDividedUnitKt {
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit : com/splendo/kaluga/scientific/unit/UndefinedScientificUnit {
	public abstract fun getExtendedQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension;
	public fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Extended;
	public synthetic fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$Imperial : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$Metric : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$MetricAndImperial : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$UKImperial : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit$USCustomary : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public fun <init> ()V
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedExtendedUnitKt {
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$Imperial;
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$Metric;
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$MetricAndImperial;
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$MetricAndUKImperial;
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$MetricAndUSCustomary;
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$UKImperial;
	public static final fun asUndefined (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$USCustomary;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit : com/splendo/kaluga/scientific/unit/UndefinedScientificUnit {
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Multiplying;
	public synthetic fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public abstract fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary : com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun component2 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLeft ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getRight ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedMultipliedUnitKt {
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public static final fun x (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit : com/splendo/kaluga/scientific/unit/UndefinedScientificUnit {
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType$Reciprocal;
	public synthetic fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary : com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public final fun component1 ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public final fun copy (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;ILjava/lang/Object;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInverse ()Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UndefinedReciprocalUnitKt {
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Imperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Imperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$Metric;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$Metric;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndImperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUKImperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUKImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$MetricAndUSCustomary;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$MetricAndUSCustomary;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$UKImperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$UKImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/DividedUndefinedScientificUnit$USCustomary;)Lcom/splendo/kaluga/scientific/unit/UndefinedMultipliedUnit$USCustomary;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/ScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;)Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;)Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Imperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$Metric;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUKImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$MetricAndUSCustomary;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$UKImperial;
	public static final fun reciprocal (Lcom/splendo/kaluga/scientific/unit/UndefinedScientificUnit;)Lcom/splendo/kaluga/scientific/unit/UndefinedReciprocalUnit$USCustomary;
}

public abstract class com/splendo/kaluga/scientific/unit/UndefinedScientificUnit : com/splendo/kaluga/scientific/unit/ScientificUnit {
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Undefined;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public abstract fun getQuantityType ()Lcom/splendo/kaluga/scientific/UndefinedQuantityType;
	public fun getSymbol ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsCustomaryCup : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsCustomaryCup;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsFluidDram : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsFluidDram;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsFluidOunce : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsFluidOunce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsLegalCup : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsLegalCup;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsLiquidGallon : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsLiquidGallon;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsLiquidPint : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsLiquidPint;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsLiquidQuart : com/splendo/kaluga/scientific/unit/USCustomaryVolume {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsLiquidQuart;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsTon : com/splendo/kaluga/scientific/unit/USCustomaryWeight {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsTon;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/UsTonForce : com/splendo/kaluga/scientific/unit/USCustomaryForce {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/UsTonForce;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/Volt : com/splendo/kaluga/scientific/unit/Voltage, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Volt;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Voltage;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/VoltMultiple : com/splendo/kaluga/scientific/unit/Voltage, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/VoltMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/VoltMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/VoltMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Voltage : com/splendo/kaluga/scientific/unit/AbstractScientificUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Voltage$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Voltage;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Voltage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/VoltageUnitKt {
	public static final fun getVoltageUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/Volume : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Volume$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Volume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Volume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/VolumeUnitKt {
	public static final fun getImperialVolumeUnits ()Ljava/util/Set;
	public static final fun getMetricVolumeUnits ()Ljava/util/Set;
	public static final fun getUKImperialVolumeUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryVolumeUnits ()Ljava/util/Set;
	public static final fun getUkImperial (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialVolumeWrapper;
	public static final fun getUsCustomary (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialVolumeWrapper;
	public static final fun getVolumeUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/VolumetricFlow : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/VolumetricFlow$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlow;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlow;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getVolume ()Lcom/splendo/kaluga/scientific/unit/Volume;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/VolumetricFlow$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/VolumetricFlowUnitKt {
	public static final fun getImperialVolumetricFlowUnits ()Ljava/util/Set;
	public static final fun getMetricVolumetricFlowUnits ()Ljava/util/Set;
	public static final fun getUKImperialVolumetricFlowUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryVolumetricFlowUnits ()Ljava/util/Set;
	public static final fun getVolumetricFlowUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolume;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;
}

public abstract class com/splendo/kaluga/scientific/unit/VolumetricFlux : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/VolumetricFlux$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlux;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Area;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$VolumetricFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public abstract fun getVolumetricFlow ()Lcom/splendo/kaluga/scientific/unit/VolumetricFlow;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/VolumetricFlux;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/VolumetricFlux$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/VolumetricFluxUnitKt {
	public static final fun getImperialVolumetricFluxUnits ()Ljava/util/Set;
	public static final fun getMetricVolumetricFluxUnits ()Ljava/util/Set;
	public static final fun getUKImperialVolumetricFluxUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryVolumetricFluxUnits ()Ljava/util/Set;
	public static final fun getVolumetricFluxUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/ImperialVolumetricFlux;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/MetricArea;)Lcom/splendo/kaluga/scientific/unit/MetricVolumetricFlux;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/UKImperialVolumetricFlux;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlow;Lcom/splendo/kaluga/scientific/unit/ImperialArea;)Lcom/splendo/kaluga/scientific/unit/USCustomaryVolumetricFlux;
}

public final class com/splendo/kaluga/scientific/unit/Watt : com/splendo/kaluga/scientific/unit/MetricAndImperialPower, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Watt;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Power;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/scientific/unit/WattHour : com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/WattHour;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Energy;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/WattHourMultiple : com/splendo/kaluga/scientific/unit/MetricAndImperialEnergy, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/WattHourMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/WattHourMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/WattHourMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/WattMultiple : com/splendo/kaluga/scientific/unit/MetricAndImperialPower, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/WattMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/WattMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/WattMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/Weber : com/splendo/kaluga/scientific/unit/MagneticFlux, com/splendo/kaluga/scientific/unit/MetricBaseUnit {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Weber;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$MagneticFlux;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/scientific/unit/WeberMultiple : com/splendo/kaluga/scientific/unit/MagneticFlux, com/splendo/kaluga/scientific/unit/MetricMultipleUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/WeberMultiple$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/WeberMultiple;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/WeberMultiple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/scientific/unit/Weight : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Weight$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Weight;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Weight$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/WeightUnitKt {
	public static final fun getImperialWeightUnits ()Ljava/util/Set;
	public static final fun getMetricWeightUnits ()Ljava/util/Set;
	public static final fun getUKImperialWeightUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryWeightUnits ()Ljava/util/Set;
	public static final fun getUkImperial (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/UKImperialImperialWeightWrapper;
	public static final fun getUsCustomary (Lcom/splendo/kaluga/scientific/unit/ImperialWeight;)Lcom/splendo/kaluga/scientific/unit/USCustomaryImperialWeightWrapper;
	public static final fun getWeightUnits ()Ljava/util/Set;
}

public abstract class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit : com/splendo/kaluga/scientific/unit/UndefinedExtendedUnit {
	public fun deltaFromSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun deltaToSIUnitDelta (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getExtendedQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$DefinedPhysicalQuantityWithDimension;
	public abstract fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$Imperial : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/ImperialScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Imperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$Metric : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$Metric;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$MetricAndImperial : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricAndImperialScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$MetricAndUKImperial : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricAndUKImperialScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$MetricAndUSCustomary : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/MetricAndUSCustomaryScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$MetricAndUSCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$UKImperial : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/UKImperialScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$UKImperial;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public final class com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit$USCustomary : com/splendo/kaluga/scientific/unit/WrappedUndefinedExtendedUnit, com/splendo/kaluga/scientific/unit/USCustomaryScientificUnit {
	public fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem$USCustomary;
	public synthetic fun getSystem ()Lcom/splendo/kaluga/scientific/unit/MeasurementSystem;
	public fun getWrapped ()Lcom/splendo/kaluga/scientific/unit/ScientificUnit;
}

public abstract class com/splendo/kaluga/scientific/unit/Yank : com/splendo/kaluga/scientific/unit/AbstractScientificUnit {
	public static final field Companion Lcom/splendo/kaluga/scientific/unit/Yank$Companion;
	public synthetic fun <init> (ILcom/splendo/kaluga/scientific/PhysicalQuantity$Yank;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public abstract fun getForce ()Lcom/splendo/kaluga/scientific/unit/Force;
	public abstract fun getPer ()Lcom/splendo/kaluga/scientific/unit/Time;
	public fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity$Yank;
	public synthetic fun getQuantity ()Lcom/splendo/kaluga/scientific/PhysicalQuantity;
	public fun getSymbol ()Ljava/lang/String;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public static final synthetic fun write$Self (Lcom/splendo/kaluga/scientific/unit/Yank;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class com/splendo/kaluga/scientific/unit/Yank$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class com/splendo/kaluga/scientific/unit/YankUnitKt {
	public static final fun getImperialYankUnits ()Ljava/util/Set;
	public static final fun getMetricYankUnits ()Ljava/util/Set;
	public static final fun getUKImperialYankUnits ()Ljava/util/Set;
	public static final fun getUSCustomaryYankUnits ()Ljava/util/Set;
	public static final fun getYankUnits ()Ljava/util/Set;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/ImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/ImperialYank;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/MetricForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/MetricYank;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/UKImperialForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/UKImperialYank;
	public static final fun per (Lcom/splendo/kaluga/scientific/unit/USCustomaryForce;Lcom/splendo/kaluga/scientific/unit/Time;)Lcom/splendo/kaluga/scientific/unit/USCustomaryYank;
}

public final class com/splendo/kaluga/scientific/unit/Yard : com/splendo/kaluga/scientific/unit/ImperialLength {
	public static final field INSTANCE Lcom/splendo/kaluga/scientific/unit/Yard;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toSIUnit (Lcom/splendo/kaluga/base/utils/Decimal;)Lcom/splendo/kaluga/base/utils/Decimal;
	public fun toString ()Ljava/lang/String;
}

